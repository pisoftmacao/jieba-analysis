package com.huaban.analysis.jieba;

import java.util.ArrayList;
import java.util.List;

import org.junit.Test;

import com.huaban.analysis.jieba.JiebaSegmenter.SegMode;

import junit.framework.TestCase;

public class JiebaSegmenterFunctionalTest extends TestCase {
	@Test
	public void testCase01() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("这是一个伸手不见五指的黑夜。我叫孙悟空，我爱北京，我爱Python和C++。", SegMode.INDEX);
		assertEquals("这是", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("一个", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("伸手", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("不见", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("五指", tokens.get(4).word);
		assertEquals(8, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("伸手不见五指", tokens.get(5).word);
		assertEquals(4, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(6, tokens.get(5).word.length());
		assertEquals(6, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("黑夜", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("。", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("我", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("叫", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("悟空", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(19, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("孙悟空", tokens.get(12).word);
		assertEquals(16, tokens.get(12).startOffset);
		assertEquals(19, tokens.get(12).endOffset);
		assertEquals(3, tokens.get(12).word.length());
		assertEquals(3, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("，", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(20, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("我", tokens.get(14).word);
		assertEquals(20, tokens.get(14).startOffset);
		assertEquals(21, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("爱", tokens.get(15).word);
		assertEquals(21, tokens.get(15).startOffset);
		assertEquals(22, tokens.get(15).endOffset);
		assertEquals(1, tokens.get(15).word.length());
		assertEquals(1, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("北京", tokens.get(16).word);
		assertEquals(22, tokens.get(16).startOffset);
		assertEquals(24, tokens.get(16).endOffset);
		assertEquals(2, tokens.get(16).word.length());
		assertEquals(2, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("，", tokens.get(17).word);
		assertEquals(24, tokens.get(17).startOffset);
		assertEquals(25, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("我", tokens.get(18).word);
		assertEquals(25, tokens.get(18).startOffset);
		assertEquals(26, tokens.get(18).endOffset);
		assertEquals(1, tokens.get(18).word.length());
		assertEquals(1, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("爱", tokens.get(19).word);
		assertEquals(26, tokens.get(19).startOffset);
		assertEquals(27, tokens.get(19).endOffset);
		assertEquals(1, tokens.get(19).word.length());
		assertEquals(1, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("python", tokens.get(20).word);
		assertEquals(27, tokens.get(20).startOffset);
		assertEquals(33, tokens.get(20).endOffset);
		assertEquals(6, tokens.get(20).word.length());
		assertEquals(6, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("和", tokens.get(21).word);
		assertEquals(33, tokens.get(21).startOffset);
		assertEquals(34, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("c++", tokens.get(22).word);
		assertEquals(34, tokens.get(22).startOffset);
		assertEquals(37, tokens.get(22).endOffset);
		assertEquals(3, tokens.get(22).word.length());
		assertEquals(3, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("。", tokens.get(23).word);
		assertEquals(37, tokens.get(23).startOffset);
		assertEquals(38, tokens.get(23).endOffset);
		assertEquals(1, tokens.get(23).word.length());
		assertEquals(1, tokens.get(23).endOffset - tokens.get(23).startOffset);
	}

	@Test
	public void testCase02() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我不喜欢日本和服。", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("不", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("喜欢", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("日本", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("和服", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("。", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase03() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("雷猴回归人间。", SegMode.INDEX);
		assertEquals("雷猴", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("回归", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("人间", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("。", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase04() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("工信处女干事每月经过下属科室都要亲口交代24口交换机等技术性器件的安装工作", SegMode.INDEX);
		assertEquals("工信处", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("干事", tokens.get(1).word);
		assertEquals(4, tokens.get(1).startOffset);
		assertEquals(6, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("女干事", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("每月", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("经过", tokens.get(4).word);
		assertEquals(8, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("下属", tokens.get(5).word);
		assertEquals(10, tokens.get(5).startOffset);
		assertEquals(12, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("科室", tokens.get(6).word);
		assertEquals(12, tokens.get(6).startOffset);
		assertEquals(14, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("都", tokens.get(7).word);
		assertEquals(14, tokens.get(7).startOffset);
		assertEquals(15, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("要", tokens.get(8).word);
		assertEquals(15, tokens.get(8).startOffset);
		assertEquals(16, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("亲口", tokens.get(9).word);
		assertEquals(16, tokens.get(9).startOffset);
		assertEquals(18, tokens.get(9).endOffset);
		assertEquals(2, tokens.get(9).word.length());
		assertEquals(2, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("交代", tokens.get(10).word);
		assertEquals(18, tokens.get(10).startOffset);
		assertEquals(20, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("24", tokens.get(11).word);
		assertEquals(20, tokens.get(11).startOffset);
		assertEquals(22, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("口", tokens.get(12).word);
		assertEquals(22, tokens.get(12).startOffset);
		assertEquals(23, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("交换", tokens.get(13).word);
		assertEquals(23, tokens.get(13).startOffset);
		assertEquals(25, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("换机", tokens.get(14).word);
		assertEquals(24, tokens.get(14).startOffset);
		assertEquals(26, tokens.get(14).endOffset);
		assertEquals(2, tokens.get(14).word.length());
		assertEquals(2, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("交换机", tokens.get(15).word);
		assertEquals(23, tokens.get(15).startOffset);
		assertEquals(26, tokens.get(15).endOffset);
		assertEquals(3, tokens.get(15).word.length());
		assertEquals(3, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("等", tokens.get(16).word);
		assertEquals(26, tokens.get(16).startOffset);
		assertEquals(27, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("技术", tokens.get(17).word);
		assertEquals(27, tokens.get(17).startOffset);
		assertEquals(29, tokens.get(17).endOffset);
		assertEquals(2, tokens.get(17).word.length());
		assertEquals(2, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("技术性", tokens.get(18).word);
		assertEquals(27, tokens.get(18).startOffset);
		assertEquals(30, tokens.get(18).endOffset);
		assertEquals(3, tokens.get(18).word.length());
		assertEquals(3, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("器件", tokens.get(19).word);
		assertEquals(30, tokens.get(19).startOffset);
		assertEquals(32, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("的", tokens.get(20).word);
		assertEquals(32, tokens.get(20).startOffset);
		assertEquals(33, tokens.get(20).endOffset);
		assertEquals(1, tokens.get(20).word.length());
		assertEquals(1, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("安装", tokens.get(21).word);
		assertEquals(33, tokens.get(21).startOffset);
		assertEquals(35, tokens.get(21).endOffset);
		assertEquals(2, tokens.get(21).word.length());
		assertEquals(2, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("工作", tokens.get(22).word);
		assertEquals(35, tokens.get(22).startOffset);
		assertEquals(37, tokens.get(22).endOffset);
		assertEquals(2, tokens.get(22).word.length());
		assertEquals(2, tokens.get(22).endOffset - tokens.get(22).startOffset);
	}

	@Test
	public void testCase05() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我需要廉租房", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("需要", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("廉租", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("租房", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("廉租房", tokens.get(4).word);
		assertEquals(3, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(3, tokens.get(4).word.length());
		assertEquals(3, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase06() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("永和服装饰品有限公司", SegMode.INDEX);
		assertEquals("永和", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("服装", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("饰品", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("有限", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("公司", tokens.get(4).word);
		assertEquals(8, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("有限公司", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(4, tokens.get(5).word.length());
		assertEquals(4, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase07() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我爱北京天安门", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("爱", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("北京", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("天安", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("天安门", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(3, tokens.get(4).word.length());
		assertEquals(3, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase08() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("abc", SegMode.INDEX);
		assertEquals("abc", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase09() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("隐马尔可夫", SegMode.INDEX);
		assertEquals("隐", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("可夫", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("马尔可", tokens.get(2).word);
		assertEquals(1, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("马尔可夫", tokens.get(3).word);
		assertEquals(1, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(4, tokens.get(3).word.length());
		assertEquals(4, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase10() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("雷猴是个好网站", SegMode.INDEX);
		assertEquals("雷猴", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("是", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("个", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("好", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("网站", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase11() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("“,”和“SOFTware（软件）”两部分组成", SegMode.INDEX);
		assertEquals("“", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(",", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("”", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("和", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(4, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("“", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(5, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("software", tokens.get(5).word);
		assertEquals(5, tokens.get(5).startOffset);
		assertEquals(13, tokens.get(5).endOffset);
		assertEquals(8, tokens.get(5).word.length());
		assertEquals(8, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("（", tokens.get(6).word);
		assertEquals(13, tokens.get(6).startOffset);
		assertEquals(14, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("软件", tokens.get(7).word);
		assertEquals(14, tokens.get(7).startOffset);
		assertEquals(16, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("）", tokens.get(8).word);
		assertEquals(16, tokens.get(8).startOffset);
		assertEquals(17, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("”", tokens.get(9).word);
		assertEquals(17, tokens.get(9).startOffset);
		assertEquals(18, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("两", tokens.get(10).word);
		assertEquals(18, tokens.get(10).startOffset);
		assertEquals(19, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("部分", tokens.get(11).word);
		assertEquals(19, tokens.get(11).startOffset);
		assertEquals(21, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("组成", tokens.get(12).word);
		assertEquals(21, tokens.get(12).startOffset);
		assertEquals(23, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
	}

	@Test
	public void testCase12() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("草泥马和欺实马是今年的流行词汇", SegMode.INDEX);
		assertEquals("草泥马", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("和", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("欺实", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("马", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("是", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("今年", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("流行", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("词汇", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase13() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("伊藤洋华堂总府店", SegMode.INDEX);
		assertEquals("伊藤", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("洋华堂", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("总府", tokens.get(2).word);
		assertEquals(5, tokens.get(2).startOffset);
		assertEquals(7, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("店", tokens.get(3).word);
		assertEquals(7, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase14() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("中国科学院计算技术研究所", SegMode.INDEX);
		assertEquals("中国", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("科学", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("学院", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("计算", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("技术", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("研究", tokens.get(5).word);
		assertEquals(9, tokens.get(5).startOffset);
		assertEquals(11, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("科学院", tokens.get(6).word);
		assertEquals(2, tokens.get(6).startOffset);
		assertEquals(5, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("研究所", tokens.get(7).word);
		assertEquals(9, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(3, tokens.get(7).word.length());
		assertEquals(3, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("中国科学院计算技术研究所", tokens.get(8).word);
		assertEquals(0, tokens.get(8).startOffset);
		assertEquals(12, tokens.get(8).endOffset);
		assertEquals(12, tokens.get(8).word.length());
		assertEquals(12, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase15() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("罗密欧与朱丽叶", SegMode.INDEX);
		assertEquals("罗密欧", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("与", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("朱丽叶", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(7, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase16() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我购买了道具和服装", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("购买", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("道具", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("和", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("服装", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase17() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("PS: 我觉得开源有一个好处，就是能够敦促自己不断改进，避免敞帚自珍", SegMode.INDEX);
		assertEquals("ps", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(":", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals(" ", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("我", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("觉得", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("开源", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("有", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("一个", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("好处", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("，", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("就是", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(17, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("能够", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(19, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("敦促", tokens.get(12).word);
		assertEquals(19, tokens.get(12).startOffset);
		assertEquals(21, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("自己", tokens.get(13).word);
		assertEquals(21, tokens.get(13).startOffset);
		assertEquals(23, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("不断", tokens.get(14).word);
		assertEquals(23, tokens.get(14).startOffset);
		assertEquals(25, tokens.get(14).endOffset);
		assertEquals(2, tokens.get(14).word.length());
		assertEquals(2, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("改进", tokens.get(15).word);
		assertEquals(25, tokens.get(15).startOffset);
		assertEquals(27, tokens.get(15).endOffset);
		assertEquals(2, tokens.get(15).word.length());
		assertEquals(2, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("不断改进", tokens.get(16).word);
		assertEquals(23, tokens.get(16).startOffset);
		assertEquals(27, tokens.get(16).endOffset);
		assertEquals(4, tokens.get(16).word.length());
		assertEquals(4, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("，", tokens.get(17).word);
		assertEquals(27, tokens.get(17).startOffset);
		assertEquals(28, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("避免", tokens.get(18).word);
		assertEquals(28, tokens.get(18).startOffset);
		assertEquals(30, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("敞帚", tokens.get(19).word);
		assertEquals(30, tokens.get(19).startOffset);
		assertEquals(32, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("自珍", tokens.get(20).word);
		assertEquals(32, tokens.get(20).startOffset);
		assertEquals(34, tokens.get(20).endOffset);
		assertEquals(2, tokens.get(20).word.length());
		assertEquals(2, tokens.get(20).endOffset - tokens.get(20).startOffset);
	}

	@Test
	public void testCase18() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("湖北省石首市", SegMode.INDEX);
		assertEquals("湖北", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("湖北省", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("石首", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("石首市", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(3, tokens.get(3).word.length());
		assertEquals(3, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase19() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("湖北省十堰市", SegMode.INDEX);
		assertEquals("湖北", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("湖北省", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("十堰", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("十堰市", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(3, tokens.get(3).word.length());
		assertEquals(3, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase20() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("总经理完成了这件事情", SegMode.INDEX);
		assertEquals("经理", tokens.get(0).word);
		assertEquals(1, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("总经理", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("完成", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("了", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("这件", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("事情", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase21() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("电脑修好了", SegMode.INDEX);
		assertEquals("电脑", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("修好", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase22() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("做好了这件事情就一了百了了", SegMode.INDEX);
		assertEquals("做好", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("了", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("这件", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("事情", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("就", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("一了百了", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(12, tokens.get(5).endOffset);
		assertEquals(4, tokens.get(5).word.length());
		assertEquals(4, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("了", tokens.get(6).word);
		assertEquals(12, tokens.get(6).startOffset);
		assertEquals(13, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase23() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("人们审美的观点是不同的", SegMode.INDEX);
		assertEquals("人们", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("审美", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("观点", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("是", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("不同", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase24() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我们买了一个美的空调", SegMode.INDEX);
		assertEquals("我们", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("买", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("一个", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("美的", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("空调", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase25() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("线程初始化时我们要注意", SegMode.INDEX);
		assertEquals("线程", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("初始", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("初始化", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("时", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("我们", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("要", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("注意", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase26() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("一个分子是由好多原子组织成的", SegMode.INDEX);
		assertEquals("一个", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("分子", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("是", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("由", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("好多", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("原子", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("组织", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(12, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("成", tokens.get(7).word);
		assertEquals(12, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase27() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("祝你马到功成", SegMode.INDEX);
		assertEquals("祝", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("你", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("马到功成", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(4, tokens.get(2).word.length());
		assertEquals(4, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase28() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("他掉进了无底洞里", SegMode.INDEX);
		assertEquals("他", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("掉", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("进", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("了", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(4, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("无底", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("无底洞", tokens.get(5).word);
		assertEquals(4, tokens.get(5).startOffset);
		assertEquals(7, tokens.get(5).endOffset);
		assertEquals(3, tokens.get(5).word.length());
		assertEquals(3, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("里", tokens.get(6).word);
		assertEquals(7, tokens.get(6).startOffset);
		assertEquals(8, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase29() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("中国的首都是北京", SegMode.INDEX);
		assertEquals("中国", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("的", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("首都", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("是", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("北京", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase30() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("孙君意", SegMode.INDEX);
		assertEquals("孙君意", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase31() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("外交部发言人马朝旭", SegMode.INDEX);
		assertEquals("外交", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("外交部", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("发言", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("发言人", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(3, tokens.get(3).word.length());
		assertEquals(3, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("马朝旭", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(3, tokens.get(4).word.length());
		assertEquals(3, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase32() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("领导人会议和第四届东亚峰会", SegMode.INDEX);
		assertEquals("领导", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("领导人", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("会议", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("和", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("第四", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("四届", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("第四届", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("东亚", tokens.get(7).word);
		assertEquals(9, tokens.get(7).startOffset);
		assertEquals(11, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("峰会", tokens.get(8).word);
		assertEquals(11, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase33() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("在过去的这五年", SegMode.INDEX);
		assertEquals("在", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("过去", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("这", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("五年", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase34() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("还需要很长的路要走", SegMode.INDEX);
		assertEquals("还", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("需要", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("很长", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("的", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("路", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("要", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("走", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase35() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("60周年首都阅兵", SegMode.INDEX);
		assertEquals("60", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("周年", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("首都", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("阅兵", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase36() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("你好人们审美的观点是不同的", SegMode.INDEX);
		assertEquals("你好", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("人们", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("审美", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("的", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("观点", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("是", tokens.get(5).word);
		assertEquals(9, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("不同", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(12, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("的", tokens.get(7).word);
		assertEquals(12, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
	}

	@Test
	public void testCase37() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("买水果然后来世博园", SegMode.INDEX);
		assertEquals("买", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("水果", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("然后", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("来", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("世博", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("博园", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("世博园", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase38() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("买水果然后去世博园", SegMode.INDEX);
		assertEquals("买", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("水果", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("然后", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("去", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("世博", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("博园", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("世博园", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase39() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("但是后来我才知道你是对的", SegMode.INDEX);
		assertEquals("但是", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("后来", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("我", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("才", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("知道", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("你", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("是", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("对", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(11, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(11, tokens.get(8).startOffset);
		assertEquals(12, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase40() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("存在即合理", SegMode.INDEX);
		assertEquals("存在", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("即", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("合理", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase41() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("的的的的的在的的的的就以和和和", SegMode.INDEX);
		assertEquals("的", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("的", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("的", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(4, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(5, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("在", tokens.get(5).word);
		assertEquals(5, tokens.get(5).startOffset);
		assertEquals(6, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(7, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("的", tokens.get(7).word);
		assertEquals(7, tokens.get(7).startOffset);
		assertEquals(8, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(8, tokens.get(8).startOffset);
		assertEquals(9, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("的", tokens.get(9).word);
		assertEquals(9, tokens.get(9).startOffset);
		assertEquals(10, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("就", tokens.get(10).word);
		assertEquals(10, tokens.get(10).startOffset);
		assertEquals(11, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("以", tokens.get(11).word);
		assertEquals(11, tokens.get(11).startOffset);
		assertEquals(12, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("和", tokens.get(12).word);
		assertEquals(12, tokens.get(12).startOffset);
		assertEquals(13, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("和", tokens.get(13).word);
		assertEquals(13, tokens.get(13).startOffset);
		assertEquals(14, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("和", tokens.get(14).word);
		assertEquals(14, tokens.get(14).startOffset);
		assertEquals(15, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
	}

	@Test
	public void testCase42() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("I love你，不以为耻，反以为rong", SegMode.INDEX);
		assertEquals("i", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(" ", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("love", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(4, tokens.get(2).word.length());
		assertEquals(4, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("你", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("，", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("不以", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("以为", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("不以为耻", tokens.get(7).word);
		assertEquals(8, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(4, tokens.get(7).word.length());
		assertEquals(4, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("，", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("反", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(14, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("以为", tokens.get(10).word);
		assertEquals(14, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("rong", tokens.get(11).word);
		assertEquals(16, tokens.get(11).startOffset);
		assertEquals(20, tokens.get(11).endOffset);
		assertEquals(4, tokens.get(11).word.length());
		assertEquals(4, tokens.get(11).endOffset - tokens.get(11).startOffset);
	}

	@Test
	public void testCase43() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("因", SegMode.INDEX);
		assertEquals("因", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase44() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("", SegMode.INDEX);
		assertTrue(tokens.isEmpty());
	}

	@Test
	public void testCase45() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("hello你好人们审美的观点是不同的", SegMode.INDEX);
		assertEquals("hello", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(5, tokens.get(0).endOffset);
		assertEquals(5, tokens.get(0).word.length());
		assertEquals(5, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("你好", tokens.get(1).word);
		assertEquals(5, tokens.get(1).startOffset);
		assertEquals(7, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("人们", tokens.get(2).word);
		assertEquals(7, tokens.get(2).startOffset);
		assertEquals(9, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("审美", tokens.get(3).word);
		assertEquals(9, tokens.get(3).startOffset);
		assertEquals(11, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(11, tokens.get(4).startOffset);
		assertEquals(12, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("观点", tokens.get(5).word);
		assertEquals(12, tokens.get(5).startOffset);
		assertEquals(14, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("是", tokens.get(6).word);
		assertEquals(14, tokens.get(6).startOffset);
		assertEquals(15, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("不同", tokens.get(7).word);
		assertEquals(15, tokens.get(7).startOffset);
		assertEquals(17, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(17, tokens.get(8).startOffset);
		assertEquals(18, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase46() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("很好但主要是基于网页形式", SegMode.INDEX);
		assertEquals("很", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("好", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("但", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("主要", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("是", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("基于", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("网页", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("形式", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
	}

	@Test
	public void testCase47() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("hello你好人们审美的观点是不同的", SegMode.INDEX);
		assertEquals("hello", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(5, tokens.get(0).endOffset);
		assertEquals(5, tokens.get(0).word.length());
		assertEquals(5, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("你好", tokens.get(1).word);
		assertEquals(5, tokens.get(1).startOffset);
		assertEquals(7, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("人们", tokens.get(2).word);
		assertEquals(7, tokens.get(2).startOffset);
		assertEquals(9, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("审美", tokens.get(3).word);
		assertEquals(9, tokens.get(3).startOffset);
		assertEquals(11, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(11, tokens.get(4).startOffset);
		assertEquals(12, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("观点", tokens.get(5).word);
		assertEquals(12, tokens.get(5).startOffset);
		assertEquals(14, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("是", tokens.get(6).word);
		assertEquals(14, tokens.get(6).startOffset);
		assertEquals(15, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("不同", tokens.get(7).word);
		assertEquals(15, tokens.get(7).startOffset);
		assertEquals(17, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(17, tokens.get(8).startOffset);
		assertEquals(18, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase48() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("为什么我不能拥有想要的生活", SegMode.INDEX);
		assertEquals("什么", tokens.get(0).word);
		assertEquals(1, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("为什么", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("我", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("不能", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("拥有", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("想要", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("生活", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
	}

	@Test
	public void testCase49() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("后来我才", SegMode.INDEX);
		assertEquals("后来", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("我", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("才", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase50() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("此次来中国是为了", SegMode.INDEX);
		assertEquals("此次", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("来", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("中国", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("是", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("为了", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase51() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("使用了它就可以解决一些问题", SegMode.INDEX);
		assertEquals("使用", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("了", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("它", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("就", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("可以", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("解决", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("一些", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("问题", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
	}

	@Test
	public void testCase52() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("                    使用了它就可以解决一些问题", SegMode.INDEX);
		assertEquals(" ", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(" ", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals(" ", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals(" ", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(4, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals(" ", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(5, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals(" ", tokens.get(5).word);
		assertEquals(5, tokens.get(5).startOffset);
		assertEquals(6, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals(" ", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(7, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals(" ", tokens.get(7).word);
		assertEquals(7, tokens.get(7).startOffset);
		assertEquals(8, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals(" ", tokens.get(8).word);
		assertEquals(8, tokens.get(8).startOffset);
		assertEquals(9, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals(" ", tokens.get(9).word);
		assertEquals(9, tokens.get(9).startOffset);
		assertEquals(10, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals(" ", tokens.get(10).word);
		assertEquals(10, tokens.get(10).startOffset);
		assertEquals(11, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals(" ", tokens.get(11).word);
		assertEquals(11, tokens.get(11).startOffset);
		assertEquals(12, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals(" ", tokens.get(12).word);
		assertEquals(12, tokens.get(12).startOffset);
		assertEquals(13, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals(" ", tokens.get(13).word);
		assertEquals(13, tokens.get(13).startOffset);
		assertEquals(14, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals(" ", tokens.get(14).word);
		assertEquals(14, tokens.get(14).startOffset);
		assertEquals(15, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals(" ", tokens.get(15).word);
		assertEquals(15, tokens.get(15).startOffset);
		assertEquals(16, tokens.get(15).endOffset);
		assertEquals(1, tokens.get(15).word.length());
		assertEquals(1, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals(" ", tokens.get(16).word);
		assertEquals(16, tokens.get(16).startOffset);
		assertEquals(17, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals(" ", tokens.get(17).word);
		assertEquals(17, tokens.get(17).startOffset);
		assertEquals(18, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals(" ", tokens.get(18).word);
		assertEquals(18, tokens.get(18).startOffset);
		assertEquals(19, tokens.get(18).endOffset);
		assertEquals(1, tokens.get(18).word.length());
		assertEquals(1, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals(" ", tokens.get(19).word);
		assertEquals(19, tokens.get(19).startOffset);
		assertEquals(20, tokens.get(19).endOffset);
		assertEquals(1, tokens.get(19).word.length());
		assertEquals(1, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("使用", tokens.get(20).word);
		assertEquals(20, tokens.get(20).startOffset);
		assertEquals(22, tokens.get(20).endOffset);
		assertEquals(2, tokens.get(20).word.length());
		assertEquals(2, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("了", tokens.get(21).word);
		assertEquals(22, tokens.get(21).startOffset);
		assertEquals(23, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("它", tokens.get(22).word);
		assertEquals(23, tokens.get(22).startOffset);
		assertEquals(24, tokens.get(22).endOffset);
		assertEquals(1, tokens.get(22).word.length());
		assertEquals(1, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("就", tokens.get(23).word);
		assertEquals(24, tokens.get(23).startOffset);
		assertEquals(25, tokens.get(23).endOffset);
		assertEquals(1, tokens.get(23).word.length());
		assertEquals(1, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals("可以", tokens.get(24).word);
		assertEquals(25, tokens.get(24).startOffset);
		assertEquals(27, tokens.get(24).endOffset);
		assertEquals(2, tokens.get(24).word.length());
		assertEquals(2, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("解决", tokens.get(25).word);
		assertEquals(27, tokens.get(25).startOffset);
		assertEquals(29, tokens.get(25).endOffset);
		assertEquals(2, tokens.get(25).word.length());
		assertEquals(2, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("一些", tokens.get(26).word);
		assertEquals(29, tokens.get(26).startOffset);
		assertEquals(31, tokens.get(26).endOffset);
		assertEquals(2, tokens.get(26).word.length());
		assertEquals(2, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("问题", tokens.get(27).word);
		assertEquals(31, tokens.get(27).startOffset);
		assertEquals(33, tokens.get(27).endOffset);
		assertEquals(2, tokens.get(27).word.length());
		assertEquals(2, tokens.get(27).endOffset - tokens.get(27).startOffset);
	}

	@Test
	public void testCase53() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("其实使用了它就可以解决一些问题", SegMode.INDEX);
		assertEquals("其实", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("使用", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("它", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("就", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("可以", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("解决", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("一些", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("问题", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase54() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("好人使用了它就可以解决一些问题", SegMode.INDEX);
		assertEquals("好人", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("使用", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("它", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("就", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("可以", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("解决", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("一些", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("问题", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase55() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("是因为和国家", SegMode.INDEX);
		assertEquals("因为", tokens.get(0).word);
		assertEquals(1, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("是因为", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("和", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("国家", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase56() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("老年搜索还支持", SegMode.INDEX);
		assertEquals("老年", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("搜索", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("还", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("支持", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase57() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process(
				"干脆就把那部蒙人的闲法给废了拉倒！RT @laoshipukong : 27日，全国人大常委会第三次审议侵权责任法草案，删除了有关医疗损害责任“举证倒置”的规定。在医患纠纷中本已处于弱势地位的消费者由此将陷入万劫不复的境地。 ",
				SegMode.INDEX);
		assertEquals("干脆", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("就", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("把", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("那部", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("蒙人", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("的", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("闲法", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("给", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("废", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("了", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(14, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("拉倒", tokens.get(10).word);
		assertEquals(14, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("！", tokens.get(11).word);
		assertEquals(16, tokens.get(11).startOffset);
		assertEquals(17, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("rt", tokens.get(12).word);
		assertEquals(17, tokens.get(12).startOffset);
		assertEquals(19, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals(" ", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(20, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("@", tokens.get(14).word);
		assertEquals(20, tokens.get(14).startOffset);
		assertEquals(21, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("laoshipukong", tokens.get(15).word);
		assertEquals(21, tokens.get(15).startOffset);
		assertEquals(33, tokens.get(15).endOffset);
		assertEquals(12, tokens.get(15).word.length());
		assertEquals(12, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals(" ", tokens.get(16).word);
		assertEquals(33, tokens.get(16).startOffset);
		assertEquals(34, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals(":", tokens.get(17).word);
		assertEquals(34, tokens.get(17).startOffset);
		assertEquals(35, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals(" ", tokens.get(18).word);
		assertEquals(35, tokens.get(18).startOffset);
		assertEquals(36, tokens.get(18).endOffset);
		assertEquals(1, tokens.get(18).word.length());
		assertEquals(1, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("27", tokens.get(19).word);
		assertEquals(36, tokens.get(19).startOffset);
		assertEquals(38, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("日", tokens.get(20).word);
		assertEquals(38, tokens.get(20).startOffset);
		assertEquals(39, tokens.get(20).endOffset);
		assertEquals(1, tokens.get(20).word.length());
		assertEquals(1, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("，", tokens.get(21).word);
		assertEquals(39, tokens.get(21).startOffset);
		assertEquals(40, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("全国", tokens.get(22).word);
		assertEquals(40, tokens.get(22).startOffset);
		assertEquals(42, tokens.get(22).endOffset);
		assertEquals(2, tokens.get(22).word.length());
		assertEquals(2, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("国人", tokens.get(23).word);
		assertEquals(41, tokens.get(23).startOffset);
		assertEquals(43, tokens.get(23).endOffset);
		assertEquals(2, tokens.get(23).word.length());
		assertEquals(2, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals("人大", tokens.get(24).word);
		assertEquals(42, tokens.get(24).startOffset);
		assertEquals(44, tokens.get(24).endOffset);
		assertEquals(2, tokens.get(24).word.length());
		assertEquals(2, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("常委", tokens.get(25).word);
		assertEquals(44, tokens.get(25).startOffset);
		assertEquals(46, tokens.get(25).endOffset);
		assertEquals(2, tokens.get(25).word.length());
		assertEquals(2, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("委会", tokens.get(26).word);
		assertEquals(45, tokens.get(26).startOffset);
		assertEquals(47, tokens.get(26).endOffset);
		assertEquals(2, tokens.get(26).word.length());
		assertEquals(2, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("常委会", tokens.get(27).word);
		assertEquals(44, tokens.get(27).startOffset);
		assertEquals(47, tokens.get(27).endOffset);
		assertEquals(3, tokens.get(27).word.length());
		assertEquals(3, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals("全国人大常委会", tokens.get(28).word);
		assertEquals(40, tokens.get(28).startOffset);
		assertEquals(47, tokens.get(28).endOffset);
		assertEquals(7, tokens.get(28).word.length());
		assertEquals(7, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("第三", tokens.get(29).word);
		assertEquals(47, tokens.get(29).startOffset);
		assertEquals(49, tokens.get(29).endOffset);
		assertEquals(2, tokens.get(29).word.length());
		assertEquals(2, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals("三次", tokens.get(30).word);
		assertEquals(48, tokens.get(30).startOffset);
		assertEquals(50, tokens.get(30).endOffset);
		assertEquals(2, tokens.get(30).word.length());
		assertEquals(2, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals("第三次", tokens.get(31).word);
		assertEquals(47, tokens.get(31).startOffset);
		assertEquals(50, tokens.get(31).endOffset);
		assertEquals(3, tokens.get(31).word.length());
		assertEquals(3, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("审议", tokens.get(32).word);
		assertEquals(50, tokens.get(32).startOffset);
		assertEquals(52, tokens.get(32).endOffset);
		assertEquals(2, tokens.get(32).word.length());
		assertEquals(2, tokens.get(32).endOffset - tokens.get(32).startOffset);
		assertEquals("侵权", tokens.get(33).word);
		assertEquals(52, tokens.get(33).startOffset);
		assertEquals(54, tokens.get(33).endOffset);
		assertEquals(2, tokens.get(33).word.length());
		assertEquals(2, tokens.get(33).endOffset - tokens.get(33).startOffset);
		assertEquals("责任", tokens.get(34).word);
		assertEquals(54, tokens.get(34).startOffset);
		assertEquals(56, tokens.get(34).endOffset);
		assertEquals(2, tokens.get(34).word.length());
		assertEquals(2, tokens.get(34).endOffset - tokens.get(34).startOffset);
		assertEquals("责任法", tokens.get(35).word);
		assertEquals(54, tokens.get(35).startOffset);
		assertEquals(57, tokens.get(35).endOffset);
		assertEquals(3, tokens.get(35).word.length());
		assertEquals(3, tokens.get(35).endOffset - tokens.get(35).startOffset);
		assertEquals("草案", tokens.get(36).word);
		assertEquals(57, tokens.get(36).startOffset);
		assertEquals(59, tokens.get(36).endOffset);
		assertEquals(2, tokens.get(36).word.length());
		assertEquals(2, tokens.get(36).endOffset - tokens.get(36).startOffset);
		assertEquals("，", tokens.get(37).word);
		assertEquals(59, tokens.get(37).startOffset);
		assertEquals(60, tokens.get(37).endOffset);
		assertEquals(1, tokens.get(37).word.length());
		assertEquals(1, tokens.get(37).endOffset - tokens.get(37).startOffset);
		assertEquals("删除", tokens.get(38).word);
		assertEquals(60, tokens.get(38).startOffset);
		assertEquals(62, tokens.get(38).endOffset);
		assertEquals(2, tokens.get(38).word.length());
		assertEquals(2, tokens.get(38).endOffset - tokens.get(38).startOffset);
		assertEquals("了", tokens.get(39).word);
		assertEquals(62, tokens.get(39).startOffset);
		assertEquals(63, tokens.get(39).endOffset);
		assertEquals(1, tokens.get(39).word.length());
		assertEquals(1, tokens.get(39).endOffset - tokens.get(39).startOffset);
		assertEquals("有关", tokens.get(40).word);
		assertEquals(63, tokens.get(40).startOffset);
		assertEquals(65, tokens.get(40).endOffset);
		assertEquals(2, tokens.get(40).word.length());
		assertEquals(2, tokens.get(40).endOffset - tokens.get(40).startOffset);
		assertEquals("医疗", tokens.get(41).word);
		assertEquals(65, tokens.get(41).startOffset);
		assertEquals(67, tokens.get(41).endOffset);
		assertEquals(2, tokens.get(41).word.length());
		assertEquals(2, tokens.get(41).endOffset - tokens.get(41).startOffset);
		assertEquals("损害", tokens.get(42).word);
		assertEquals(67, tokens.get(42).startOffset);
		assertEquals(69, tokens.get(42).endOffset);
		assertEquals(2, tokens.get(42).word.length());
		assertEquals(2, tokens.get(42).endOffset - tokens.get(42).startOffset);
		assertEquals("责任", tokens.get(43).word);
		assertEquals(69, tokens.get(43).startOffset);
		assertEquals(71, tokens.get(43).endOffset);
		assertEquals(2, tokens.get(43).word.length());
		assertEquals(2, tokens.get(43).endOffset - tokens.get(43).startOffset);
		assertEquals("“", tokens.get(44).word);
		assertEquals(71, tokens.get(44).startOffset);
		assertEquals(72, tokens.get(44).endOffset);
		assertEquals(1, tokens.get(44).word.length());
		assertEquals(1, tokens.get(44).endOffset - tokens.get(44).startOffset);
		assertEquals("举证", tokens.get(45).word);
		assertEquals(72, tokens.get(45).startOffset);
		assertEquals(74, tokens.get(45).endOffset);
		assertEquals(2, tokens.get(45).word.length());
		assertEquals(2, tokens.get(45).endOffset - tokens.get(45).startOffset);
		assertEquals("倒置", tokens.get(46).word);
		assertEquals(74, tokens.get(46).startOffset);
		assertEquals(76, tokens.get(46).endOffset);
		assertEquals(2, tokens.get(46).word.length());
		assertEquals(2, tokens.get(46).endOffset - tokens.get(46).startOffset);
		assertEquals("”", tokens.get(47).word);
		assertEquals(76, tokens.get(47).startOffset);
		assertEquals(77, tokens.get(47).endOffset);
		assertEquals(1, tokens.get(47).word.length());
		assertEquals(1, tokens.get(47).endOffset - tokens.get(47).startOffset);
		assertEquals("的", tokens.get(48).word);
		assertEquals(77, tokens.get(48).startOffset);
		assertEquals(78, tokens.get(48).endOffset);
		assertEquals(1, tokens.get(48).word.length());
		assertEquals(1, tokens.get(48).endOffset - tokens.get(48).startOffset);
		assertEquals("规定", tokens.get(49).word);
		assertEquals(78, tokens.get(49).startOffset);
		assertEquals(80, tokens.get(49).endOffset);
		assertEquals(2, tokens.get(49).word.length());
		assertEquals(2, tokens.get(49).endOffset - tokens.get(49).startOffset);
		assertEquals("。", tokens.get(50).word);
		assertEquals(80, tokens.get(50).startOffset);
		assertEquals(81, tokens.get(50).endOffset);
		assertEquals(1, tokens.get(50).word.length());
		assertEquals(1, tokens.get(50).endOffset - tokens.get(50).startOffset);
		assertEquals("在", tokens.get(51).word);
		assertEquals(81, tokens.get(51).startOffset);
		assertEquals(82, tokens.get(51).endOffset);
		assertEquals(1, tokens.get(51).word.length());
		assertEquals(1, tokens.get(51).endOffset - tokens.get(51).startOffset);
		assertEquals("医患", tokens.get(52).word);
		assertEquals(82, tokens.get(52).startOffset);
		assertEquals(84, tokens.get(52).endOffset);
		assertEquals(2, tokens.get(52).word.length());
		assertEquals(2, tokens.get(52).endOffset - tokens.get(52).startOffset);
		assertEquals("纠纷", tokens.get(53).word);
		assertEquals(84, tokens.get(53).startOffset);
		assertEquals(86, tokens.get(53).endOffset);
		assertEquals(2, tokens.get(53).word.length());
		assertEquals(2, tokens.get(53).endOffset - tokens.get(53).startOffset);
		assertEquals("中本", tokens.get(54).word);
		assertEquals(86, tokens.get(54).startOffset);
		assertEquals(88, tokens.get(54).endOffset);
		assertEquals(2, tokens.get(54).word.length());
		assertEquals(2, tokens.get(54).endOffset - tokens.get(54).startOffset);
		assertEquals("已", tokens.get(55).word);
		assertEquals(88, tokens.get(55).startOffset);
		assertEquals(89, tokens.get(55).endOffset);
		assertEquals(1, tokens.get(55).word.length());
		assertEquals(1, tokens.get(55).endOffset - tokens.get(55).startOffset);
		assertEquals("处于", tokens.get(56).word);
		assertEquals(89, tokens.get(56).startOffset);
		assertEquals(91, tokens.get(56).endOffset);
		assertEquals(2, tokens.get(56).word.length());
		assertEquals(2, tokens.get(56).endOffset - tokens.get(56).startOffset);
		assertEquals("弱势", tokens.get(57).word);
		assertEquals(91, tokens.get(57).startOffset);
		assertEquals(93, tokens.get(57).endOffset);
		assertEquals(2, tokens.get(57).word.length());
		assertEquals(2, tokens.get(57).endOffset - tokens.get(57).startOffset);
		assertEquals("地位", tokens.get(58).word);
		assertEquals(93, tokens.get(58).startOffset);
		assertEquals(95, tokens.get(58).endOffset);
		assertEquals(2, tokens.get(58).word.length());
		assertEquals(2, tokens.get(58).endOffset - tokens.get(58).startOffset);
		assertEquals("的", tokens.get(59).word);
		assertEquals(95, tokens.get(59).startOffset);
		assertEquals(96, tokens.get(59).endOffset);
		assertEquals(1, tokens.get(59).word.length());
		assertEquals(1, tokens.get(59).endOffset - tokens.get(59).startOffset);
		assertEquals("消费", tokens.get(60).word);
		assertEquals(96, tokens.get(60).startOffset);
		assertEquals(98, tokens.get(60).endOffset);
		assertEquals(2, tokens.get(60).word.length());
		assertEquals(2, tokens.get(60).endOffset - tokens.get(60).startOffset);
		assertEquals("消费者", tokens.get(61).word);
		assertEquals(96, tokens.get(61).startOffset);
		assertEquals(99, tokens.get(61).endOffset);
		assertEquals(3, tokens.get(61).word.length());
		assertEquals(3, tokens.get(61).endOffset - tokens.get(61).startOffset);
		assertEquals("由此", tokens.get(62).word);
		assertEquals(99, tokens.get(62).startOffset);
		assertEquals(101, tokens.get(62).endOffset);
		assertEquals(2, tokens.get(62).word.length());
		assertEquals(2, tokens.get(62).endOffset - tokens.get(62).startOffset);
		assertEquals("将", tokens.get(63).word);
		assertEquals(101, tokens.get(63).startOffset);
		assertEquals(102, tokens.get(63).endOffset);
		assertEquals(1, tokens.get(63).word.length());
		assertEquals(1, tokens.get(63).endOffset - tokens.get(63).startOffset);
		assertEquals("陷入", tokens.get(64).word);
		assertEquals(102, tokens.get(64).startOffset);
		assertEquals(104, tokens.get(64).endOffset);
		assertEquals(2, tokens.get(64).word.length());
		assertEquals(2, tokens.get(64).endOffset - tokens.get(64).startOffset);
		assertEquals("不复", tokens.get(65).word);
		assertEquals(106, tokens.get(65).startOffset);
		assertEquals(108, tokens.get(65).endOffset);
		assertEquals(2, tokens.get(65).word.length());
		assertEquals(2, tokens.get(65).endOffset - tokens.get(65).startOffset);
		assertEquals("万劫不复", tokens.get(66).word);
		assertEquals(104, tokens.get(66).startOffset);
		assertEquals(108, tokens.get(66).endOffset);
		assertEquals(4, tokens.get(66).word.length());
		assertEquals(4, tokens.get(66).endOffset - tokens.get(66).startOffset);
		assertEquals("的", tokens.get(67).word);
		assertEquals(108, tokens.get(67).startOffset);
		assertEquals(109, tokens.get(67).endOffset);
		assertEquals(1, tokens.get(67).word.length());
		assertEquals(1, tokens.get(67).endOffset - tokens.get(67).startOffset);
		assertEquals("境地", tokens.get(68).word);
		assertEquals(109, tokens.get(68).startOffset);
		assertEquals(111, tokens.get(68).endOffset);
		assertEquals(2, tokens.get(68).word.length());
		assertEquals(2, tokens.get(68).endOffset - tokens.get(68).startOffset);
		assertEquals("。", tokens.get(69).word);
		assertEquals(111, tokens.get(69).startOffset);
		assertEquals(112, tokens.get(69).endOffset);
		assertEquals(1, tokens.get(69).word.length());
		assertEquals(1, tokens.get(69).endOffset - tokens.get(69).startOffset);
		assertEquals(" ", tokens.get(70).word);
		assertEquals(112, tokens.get(70).startOffset);
		assertEquals(113, tokens.get(70).endOffset);
		assertEquals(1, tokens.get(70).word.length());
		assertEquals(1, tokens.get(70).endOffset - tokens.get(70).startOffset);
	}

	@Test
	public void testCase58() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("大 \" \"他说的确实在理 \"长春市长春节讲话 \"结婚的和尚未结婚的 \"结合成分子时 \"旅游和服务是最好的", SegMode.INDEX);
		assertEquals("大", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(" ", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("\"", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals(" ", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(4, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("\"", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(5, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("他", tokens.get(5).word);
		assertEquals(5, tokens.get(5).startOffset);
		assertEquals(6, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("说", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(7, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("的", tokens.get(7).word);
		assertEquals(7, tokens.get(7).startOffset);
		assertEquals(8, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("确实", tokens.get(8).word);
		assertEquals(8, tokens.get(8).startOffset);
		assertEquals(10, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("在理", tokens.get(9).word);
		assertEquals(10, tokens.get(9).startOffset);
		assertEquals(12, tokens.get(9).endOffset);
		assertEquals(2, tokens.get(9).word.length());
		assertEquals(2, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals(" ", tokens.get(10).word);
		assertEquals(12, tokens.get(10).startOffset);
		assertEquals(13, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("\"", tokens.get(11).word);
		assertEquals(13, tokens.get(11).startOffset);
		assertEquals(14, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("长春", tokens.get(12).word);
		assertEquals(14, tokens.get(12).startOffset);
		assertEquals(16, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("市长", tokens.get(13).word);
		assertEquals(16, tokens.get(13).startOffset);
		assertEquals(18, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("春节", tokens.get(14).word);
		assertEquals(18, tokens.get(14).startOffset);
		assertEquals(20, tokens.get(14).endOffset);
		assertEquals(2, tokens.get(14).word.length());
		assertEquals(2, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("讲话", tokens.get(15).word);
		assertEquals(20, tokens.get(15).startOffset);
		assertEquals(22, tokens.get(15).endOffset);
		assertEquals(2, tokens.get(15).word.length());
		assertEquals(2, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals(" ", tokens.get(16).word);
		assertEquals(22, tokens.get(16).startOffset);
		assertEquals(23, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("\"", tokens.get(17).word);
		assertEquals(23, tokens.get(17).startOffset);
		assertEquals(24, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("结婚", tokens.get(18).word);
		assertEquals(24, tokens.get(18).startOffset);
		assertEquals(26, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("的", tokens.get(19).word);
		assertEquals(26, tokens.get(19).startOffset);
		assertEquals(27, tokens.get(19).endOffset);
		assertEquals(1, tokens.get(19).word.length());
		assertEquals(1, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("和", tokens.get(20).word);
		assertEquals(27, tokens.get(20).startOffset);
		assertEquals(28, tokens.get(20).endOffset);
		assertEquals(1, tokens.get(20).word.length());
		assertEquals(1, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("尚未", tokens.get(21).word);
		assertEquals(28, tokens.get(21).startOffset);
		assertEquals(30, tokens.get(21).endOffset);
		assertEquals(2, tokens.get(21).word.length());
		assertEquals(2, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("结婚", tokens.get(22).word);
		assertEquals(30, tokens.get(22).startOffset);
		assertEquals(32, tokens.get(22).endOffset);
		assertEquals(2, tokens.get(22).word.length());
		assertEquals(2, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("的", tokens.get(23).word);
		assertEquals(32, tokens.get(23).startOffset);
		assertEquals(33, tokens.get(23).endOffset);
		assertEquals(1, tokens.get(23).word.length());
		assertEquals(1, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals(" ", tokens.get(24).word);
		assertEquals(33, tokens.get(24).startOffset);
		assertEquals(34, tokens.get(24).endOffset);
		assertEquals(1, tokens.get(24).word.length());
		assertEquals(1, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("\"", tokens.get(25).word);
		assertEquals(34, tokens.get(25).startOffset);
		assertEquals(35, tokens.get(25).endOffset);
		assertEquals(1, tokens.get(25).word.length());
		assertEquals(1, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("结合", tokens.get(26).word);
		assertEquals(35, tokens.get(26).startOffset);
		assertEquals(37, tokens.get(26).endOffset);
		assertEquals(2, tokens.get(26).word.length());
		assertEquals(2, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("成", tokens.get(27).word);
		assertEquals(37, tokens.get(27).startOffset);
		assertEquals(38, tokens.get(27).endOffset);
		assertEquals(1, tokens.get(27).word.length());
		assertEquals(1, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals("分子", tokens.get(28).word);
		assertEquals(38, tokens.get(28).startOffset);
		assertEquals(40, tokens.get(28).endOffset);
		assertEquals(2, tokens.get(28).word.length());
		assertEquals(2, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("时", tokens.get(29).word);
		assertEquals(40, tokens.get(29).startOffset);
		assertEquals(41, tokens.get(29).endOffset);
		assertEquals(1, tokens.get(29).word.length());
		assertEquals(1, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals(" ", tokens.get(30).word);
		assertEquals(41, tokens.get(30).startOffset);
		assertEquals(42, tokens.get(30).endOffset);
		assertEquals(1, tokens.get(30).word.length());
		assertEquals(1, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals("\"", tokens.get(31).word);
		assertEquals(42, tokens.get(31).startOffset);
		assertEquals(43, tokens.get(31).endOffset);
		assertEquals(1, tokens.get(31).word.length());
		assertEquals(1, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("旅游", tokens.get(32).word);
		assertEquals(43, tokens.get(32).startOffset);
		assertEquals(45, tokens.get(32).endOffset);
		assertEquals(2, tokens.get(32).word.length());
		assertEquals(2, tokens.get(32).endOffset - tokens.get(32).startOffset);
		assertEquals("和", tokens.get(33).word);
		assertEquals(45, tokens.get(33).startOffset);
		assertEquals(46, tokens.get(33).endOffset);
		assertEquals(1, tokens.get(33).word.length());
		assertEquals(1, tokens.get(33).endOffset - tokens.get(33).startOffset);
		assertEquals("服务", tokens.get(34).word);
		assertEquals(46, tokens.get(34).startOffset);
		assertEquals(48, tokens.get(34).endOffset);
		assertEquals(2, tokens.get(34).word.length());
		assertEquals(2, tokens.get(34).endOffset - tokens.get(34).startOffset);
		assertEquals("是", tokens.get(35).word);
		assertEquals(48, tokens.get(35).startOffset);
		assertEquals(49, tokens.get(35).endOffset);
		assertEquals(1, tokens.get(35).word.length());
		assertEquals(1, tokens.get(35).endOffset - tokens.get(35).startOffset);
		assertEquals("最好", tokens.get(36).word);
		assertEquals(49, tokens.get(36).startOffset);
		assertEquals(51, tokens.get(36).endOffset);
		assertEquals(2, tokens.get(36).word.length());
		assertEquals(2, tokens.get(36).endOffset - tokens.get(36).startOffset);
		assertEquals("的", tokens.get(37).word);
		assertEquals(51, tokens.get(37).startOffset);
		assertEquals(52, tokens.get(37).endOffset);
		assertEquals(1, tokens.get(37).word.length());
		assertEquals(1, tokens.get(37).endOffset - tokens.get(37).startOffset);
	}

	@Test
	public void testCase59() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("这件事情的确是我的错 \"供大家参考指正 \"哈尔滨政府公布塌桥原因 \"我在机场入口处 \"邢永臣摄影报道", SegMode.INDEX);
		assertEquals("这件", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("事情", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的确", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("是", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("我", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("的", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("错", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals(" ", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(11, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("\"", tokens.get(8).word);
		assertEquals(11, tokens.get(8).startOffset);
		assertEquals(12, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("供", tokens.get(9).word);
		assertEquals(12, tokens.get(9).startOffset);
		assertEquals(13, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("大家", tokens.get(10).word);
		assertEquals(13, tokens.get(10).startOffset);
		assertEquals(15, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("参考", tokens.get(11).word);
		assertEquals(15, tokens.get(11).startOffset);
		assertEquals(17, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("指正", tokens.get(12).word);
		assertEquals(17, tokens.get(12).startOffset);
		assertEquals(19, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals(" ", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(20, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("\"", tokens.get(14).word);
		assertEquals(20, tokens.get(14).startOffset);
		assertEquals(21, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("哈尔", tokens.get(15).word);
		assertEquals(21, tokens.get(15).startOffset);
		assertEquals(23, tokens.get(15).endOffset);
		assertEquals(2, tokens.get(15).word.length());
		assertEquals(2, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("哈尔滨", tokens.get(16).word);
		assertEquals(21, tokens.get(16).startOffset);
		assertEquals(24, tokens.get(16).endOffset);
		assertEquals(3, tokens.get(16).word.length());
		assertEquals(3, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("政府", tokens.get(17).word);
		assertEquals(24, tokens.get(17).startOffset);
		assertEquals(26, tokens.get(17).endOffset);
		assertEquals(2, tokens.get(17).word.length());
		assertEquals(2, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("公布", tokens.get(18).word);
		assertEquals(26, tokens.get(18).startOffset);
		assertEquals(28, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("塌桥", tokens.get(19).word);
		assertEquals(28, tokens.get(19).startOffset);
		assertEquals(30, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("原因", tokens.get(20).word);
		assertEquals(30, tokens.get(20).startOffset);
		assertEquals(32, tokens.get(20).endOffset);
		assertEquals(2, tokens.get(20).word.length());
		assertEquals(2, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals(" ", tokens.get(21).word);
		assertEquals(32, tokens.get(21).startOffset);
		assertEquals(33, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("\"", tokens.get(22).word);
		assertEquals(33, tokens.get(22).startOffset);
		assertEquals(34, tokens.get(22).endOffset);
		assertEquals(1, tokens.get(22).word.length());
		assertEquals(1, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("我", tokens.get(23).word);
		assertEquals(34, tokens.get(23).startOffset);
		assertEquals(35, tokens.get(23).endOffset);
		assertEquals(1, tokens.get(23).word.length());
		assertEquals(1, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals("在", tokens.get(24).word);
		assertEquals(35, tokens.get(24).startOffset);
		assertEquals(36, tokens.get(24).endOffset);
		assertEquals(1, tokens.get(24).word.length());
		assertEquals(1, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("机场", tokens.get(25).word);
		assertEquals(36, tokens.get(25).startOffset);
		assertEquals(38, tokens.get(25).endOffset);
		assertEquals(2, tokens.get(25).word.length());
		assertEquals(2, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("入口", tokens.get(26).word);
		assertEquals(38, tokens.get(26).startOffset);
		assertEquals(40, tokens.get(26).endOffset);
		assertEquals(2, tokens.get(26).word.length());
		assertEquals(2, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("入口处", tokens.get(27).word);
		assertEquals(38, tokens.get(27).startOffset);
		assertEquals(41, tokens.get(27).endOffset);
		assertEquals(3, tokens.get(27).word.length());
		assertEquals(3, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals(" ", tokens.get(28).word);
		assertEquals(41, tokens.get(28).startOffset);
		assertEquals(42, tokens.get(28).endOffset);
		assertEquals(1, tokens.get(28).word.length());
		assertEquals(1, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("\"", tokens.get(29).word);
		assertEquals(42, tokens.get(29).startOffset);
		assertEquals(43, tokens.get(29).endOffset);
		assertEquals(1, tokens.get(29).word.length());
		assertEquals(1, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals("邢永臣", tokens.get(30).word);
		assertEquals(43, tokens.get(30).startOffset);
		assertEquals(46, tokens.get(30).endOffset);
		assertEquals(3, tokens.get(30).word.length());
		assertEquals(3, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals("摄影", tokens.get(31).word);
		assertEquals(46, tokens.get(31).startOffset);
		assertEquals(48, tokens.get(31).endOffset);
		assertEquals(2, tokens.get(31).word.length());
		assertEquals(2, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("报道", tokens.get(32).word);
		assertEquals(48, tokens.get(32).startOffset);
		assertEquals(50, tokens.get(32).endOffset);
		assertEquals(2, tokens.get(32).word.length());
		assertEquals(2, tokens.get(32).endOffset - tokens.get(32).startOffset);
	}

	@Test
	public void testCase60() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("BP神经网络如何训练才能在分类时增加区分度？ \"南京市长江大桥 \"应一些使用者的建议，也为了便于利用NiuTrans用于SMT研究",
				SegMode.INDEX);
		assertEquals("bp", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("神经", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("网络", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("神经网", tokens.get(3).word);
		assertEquals(2, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(3, tokens.get(3).word.length());
		assertEquals(3, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("神经网络", tokens.get(4).word);
		assertEquals(2, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(4, tokens.get(4).word.length());
		assertEquals(4, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("如何", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("训练", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("才能", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("在", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("分类", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(2, tokens.get(9).word.length());
		assertEquals(2, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("时", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("增加", tokens.get(11).word);
		assertEquals(16, tokens.get(11).startOffset);
		assertEquals(18, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("区分", tokens.get(12).word);
		assertEquals(18, tokens.get(12).startOffset);
		assertEquals(20, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("分度", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(21, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("区分度", tokens.get(14).word);
		assertEquals(18, tokens.get(14).startOffset);
		assertEquals(21, tokens.get(14).endOffset);
		assertEquals(3, tokens.get(14).word.length());
		assertEquals(3, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("？", tokens.get(15).word);
		assertEquals(21, tokens.get(15).startOffset);
		assertEquals(22, tokens.get(15).endOffset);
		assertEquals(1, tokens.get(15).word.length());
		assertEquals(1, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals(" ", tokens.get(16).word);
		assertEquals(22, tokens.get(16).startOffset);
		assertEquals(23, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("\"", tokens.get(17).word);
		assertEquals(23, tokens.get(17).startOffset);
		assertEquals(24, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("南京", tokens.get(18).word);
		assertEquals(24, tokens.get(18).startOffset);
		assertEquals(26, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("京市", tokens.get(19).word);
		assertEquals(25, tokens.get(19).startOffset);
		assertEquals(27, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("南京市", tokens.get(20).word);
		assertEquals(24, tokens.get(20).startOffset);
		assertEquals(27, tokens.get(20).endOffset);
		assertEquals(3, tokens.get(20).word.length());
		assertEquals(3, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("长江", tokens.get(21).word);
		assertEquals(27, tokens.get(21).startOffset);
		assertEquals(29, tokens.get(21).endOffset);
		assertEquals(2, tokens.get(21).word.length());
		assertEquals(2, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("大桥", tokens.get(22).word);
		assertEquals(29, tokens.get(22).startOffset);
		assertEquals(31, tokens.get(22).endOffset);
		assertEquals(2, tokens.get(22).word.length());
		assertEquals(2, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("长江大桥", tokens.get(23).word);
		assertEquals(27, tokens.get(23).startOffset);
		assertEquals(31, tokens.get(23).endOffset);
		assertEquals(4, tokens.get(23).word.length());
		assertEquals(4, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals(" ", tokens.get(24).word);
		assertEquals(31, tokens.get(24).startOffset);
		assertEquals(32, tokens.get(24).endOffset);
		assertEquals(1, tokens.get(24).word.length());
		assertEquals(1, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("\"", tokens.get(25).word);
		assertEquals(32, tokens.get(25).startOffset);
		assertEquals(33, tokens.get(25).endOffset);
		assertEquals(1, tokens.get(25).word.length());
		assertEquals(1, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("应", tokens.get(26).word);
		assertEquals(33, tokens.get(26).startOffset);
		assertEquals(34, tokens.get(26).endOffset);
		assertEquals(1, tokens.get(26).word.length());
		assertEquals(1, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("一些", tokens.get(27).word);
		assertEquals(34, tokens.get(27).startOffset);
		assertEquals(36, tokens.get(27).endOffset);
		assertEquals(2, tokens.get(27).word.length());
		assertEquals(2, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals("使用", tokens.get(28).word);
		assertEquals(36, tokens.get(28).startOffset);
		assertEquals(38, tokens.get(28).endOffset);
		assertEquals(2, tokens.get(28).word.length());
		assertEquals(2, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("用者", tokens.get(29).word);
		assertEquals(37, tokens.get(29).startOffset);
		assertEquals(39, tokens.get(29).endOffset);
		assertEquals(2, tokens.get(29).word.length());
		assertEquals(2, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals("使用者", tokens.get(30).word);
		assertEquals(36, tokens.get(30).startOffset);
		assertEquals(39, tokens.get(30).endOffset);
		assertEquals(3, tokens.get(30).word.length());
		assertEquals(3, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals("的", tokens.get(31).word);
		assertEquals(39, tokens.get(31).startOffset);
		assertEquals(40, tokens.get(31).endOffset);
		assertEquals(1, tokens.get(31).word.length());
		assertEquals(1, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("建议", tokens.get(32).word);
		assertEquals(40, tokens.get(32).startOffset);
		assertEquals(42, tokens.get(32).endOffset);
		assertEquals(2, tokens.get(32).word.length());
		assertEquals(2, tokens.get(32).endOffset - tokens.get(32).startOffset);
		assertEquals("，", tokens.get(33).word);
		assertEquals(42, tokens.get(33).startOffset);
		assertEquals(43, tokens.get(33).endOffset);
		assertEquals(1, tokens.get(33).word.length());
		assertEquals(1, tokens.get(33).endOffset - tokens.get(33).startOffset);
		assertEquals("也", tokens.get(34).word);
		assertEquals(43, tokens.get(34).startOffset);
		assertEquals(44, tokens.get(34).endOffset);
		assertEquals(1, tokens.get(34).word.length());
		assertEquals(1, tokens.get(34).endOffset - tokens.get(34).startOffset);
		assertEquals("为了", tokens.get(35).word);
		assertEquals(44, tokens.get(35).startOffset);
		assertEquals(46, tokens.get(35).endOffset);
		assertEquals(2, tokens.get(35).word.length());
		assertEquals(2, tokens.get(35).endOffset - tokens.get(35).startOffset);
		assertEquals("便于", tokens.get(36).word);
		assertEquals(46, tokens.get(36).startOffset);
		assertEquals(48, tokens.get(36).endOffset);
		assertEquals(2, tokens.get(36).word.length());
		assertEquals(2, tokens.get(36).endOffset - tokens.get(36).startOffset);
		assertEquals("利用", tokens.get(37).word);
		assertEquals(48, tokens.get(37).startOffset);
		assertEquals(50, tokens.get(37).endOffset);
		assertEquals(2, tokens.get(37).word.length());
		assertEquals(2, tokens.get(37).endOffset - tokens.get(37).startOffset);
		assertEquals("niutrans", tokens.get(38).word);
		assertEquals(50, tokens.get(38).startOffset);
		assertEquals(58, tokens.get(38).endOffset);
		assertEquals(8, tokens.get(38).word.length());
		assertEquals(8, tokens.get(38).endOffset - tokens.get(38).startOffset);
		assertEquals("用于", tokens.get(39).word);
		assertEquals(58, tokens.get(39).startOffset);
		assertEquals(60, tokens.get(39).endOffset);
		assertEquals(2, tokens.get(39).word.length());
		assertEquals(2, tokens.get(39).endOffset - tokens.get(39).startOffset);
		assertEquals("smt", tokens.get(40).word);
		assertEquals(60, tokens.get(40).startOffset);
		assertEquals(63, tokens.get(40).endOffset);
		assertEquals(3, tokens.get(40).word.length());
		assertEquals(3, tokens.get(40).endOffset - tokens.get(40).startOffset);
		assertEquals("研究", tokens.get(41).word);
		assertEquals(63, tokens.get(41).startOffset);
		assertEquals(65, tokens.get(41).endOffset);
		assertEquals(2, tokens.get(41).word.length());
		assertEquals(2, tokens.get(41).endOffset - tokens.get(41).startOffset);
	}

	@Test
	public void testCase61() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("长春市长春药店 \"邓颖超生前最喜欢的衣服 \"胡锦涛是热爱世界和平的政治局常委", SegMode.INDEX);
		assertEquals("长春", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("长春市", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("长春", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("药店", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals(" ", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("\"", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("邓颖超", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(12, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("生前", tokens.get(7).word);
		assertEquals(12, tokens.get(7).startOffset);
		assertEquals(14, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("最", tokens.get(8).word);
		assertEquals(14, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("喜欢", tokens.get(9).word);
		assertEquals(15, tokens.get(9).startOffset);
		assertEquals(17, tokens.get(9).endOffset);
		assertEquals(2, tokens.get(9).word.length());
		assertEquals(2, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("的", tokens.get(10).word);
		assertEquals(17, tokens.get(10).startOffset);
		assertEquals(18, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("衣服", tokens.get(11).word);
		assertEquals(18, tokens.get(11).startOffset);
		assertEquals(20, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals(" ", tokens.get(12).word);
		assertEquals(20, tokens.get(12).startOffset);
		assertEquals(21, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("\"", tokens.get(13).word);
		assertEquals(21, tokens.get(13).startOffset);
		assertEquals(22, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("锦涛", tokens.get(14).word);
		assertEquals(23, tokens.get(14).startOffset);
		assertEquals(25, tokens.get(14).endOffset);
		assertEquals(2, tokens.get(14).word.length());
		assertEquals(2, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("胡锦涛", tokens.get(15).word);
		assertEquals(22, tokens.get(15).startOffset);
		assertEquals(25, tokens.get(15).endOffset);
		assertEquals(3, tokens.get(15).word.length());
		assertEquals(3, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("是", tokens.get(16).word);
		assertEquals(25, tokens.get(16).startOffset);
		assertEquals(26, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("热爱", tokens.get(17).word);
		assertEquals(26, tokens.get(17).startOffset);
		assertEquals(28, tokens.get(17).endOffset);
		assertEquals(2, tokens.get(17).word.length());
		assertEquals(2, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("世界", tokens.get(18).word);
		assertEquals(28, tokens.get(18).startOffset);
		assertEquals(30, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("和平", tokens.get(19).word);
		assertEquals(30, tokens.get(19).startOffset);
		assertEquals(32, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("的", tokens.get(20).word);
		assertEquals(32, tokens.get(20).startOffset);
		assertEquals(33, tokens.get(20).endOffset);
		assertEquals(1, tokens.get(20).word.length());
		assertEquals(1, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("政治", tokens.get(21).word);
		assertEquals(33, tokens.get(21).startOffset);
		assertEquals(35, tokens.get(21).endOffset);
		assertEquals(2, tokens.get(21).word.length());
		assertEquals(2, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("政治局", tokens.get(22).word);
		assertEquals(33, tokens.get(22).startOffset);
		assertEquals(36, tokens.get(22).endOffset);
		assertEquals(3, tokens.get(22).word.length());
		assertEquals(3, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("常委", tokens.get(23).word);
		assertEquals(36, tokens.get(23).startOffset);
		assertEquals(38, tokens.get(23).endOffset);
		assertEquals(2, tokens.get(23).word.length());
		assertEquals(2, tokens.get(23).endOffset - tokens.get(23).startOffset);
	}

	@Test
	public void testCase62() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("程序员祝海林和朱会震是在孙健的左面和右面, 范凯在最右面.再往左是李松洪 \"一次性交多少钱 \"两块五一套，三块八一斤，四块七一本，五块六一条",
				SegMode.INDEX);
		assertEquals("程序", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("程序员", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("祝", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("海林", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("和", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("朱会震", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(3, tokens.get(5).word.length());
		assertEquals(3, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("是", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("在", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("孙健", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("的", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("左面", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(17, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("和", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(18, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("右面", tokens.get(12).word);
		assertEquals(18, tokens.get(12).startOffset);
		assertEquals(20, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals(",", tokens.get(13).word);
		assertEquals(20, tokens.get(13).startOffset);
		assertEquals(21, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals(" ", tokens.get(14).word);
		assertEquals(21, tokens.get(14).startOffset);
		assertEquals(22, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("范凯", tokens.get(15).word);
		assertEquals(22, tokens.get(15).startOffset);
		assertEquals(24, tokens.get(15).endOffset);
		assertEquals(2, tokens.get(15).word.length());
		assertEquals(2, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("在", tokens.get(16).word);
		assertEquals(24, tokens.get(16).startOffset);
		assertEquals(25, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("最", tokens.get(17).word);
		assertEquals(25, tokens.get(17).startOffset);
		assertEquals(26, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("右面", tokens.get(18).word);
		assertEquals(26, tokens.get(18).startOffset);
		assertEquals(28, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals(".", tokens.get(19).word);
		assertEquals(28, tokens.get(19).startOffset);
		assertEquals(29, tokens.get(19).endOffset);
		assertEquals(1, tokens.get(19).word.length());
		assertEquals(1, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("再往", tokens.get(20).word);
		assertEquals(29, tokens.get(20).startOffset);
		assertEquals(31, tokens.get(20).endOffset);
		assertEquals(2, tokens.get(20).word.length());
		assertEquals(2, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("左", tokens.get(21).word);
		assertEquals(31, tokens.get(21).startOffset);
		assertEquals(32, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("是", tokens.get(22).word);
		assertEquals(32, tokens.get(22).startOffset);
		assertEquals(33, tokens.get(22).endOffset);
		assertEquals(1, tokens.get(22).word.length());
		assertEquals(1, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("李松洪", tokens.get(23).word);
		assertEquals(33, tokens.get(23).startOffset);
		assertEquals(36, tokens.get(23).endOffset);
		assertEquals(3, tokens.get(23).word.length());
		assertEquals(3, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals(" ", tokens.get(24).word);
		assertEquals(36, tokens.get(24).startOffset);
		assertEquals(37, tokens.get(24).endOffset);
		assertEquals(1, tokens.get(24).word.length());
		assertEquals(1, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("\"", tokens.get(25).word);
		assertEquals(37, tokens.get(25).startOffset);
		assertEquals(38, tokens.get(25).endOffset);
		assertEquals(1, tokens.get(25).word.length());
		assertEquals(1, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("一次", tokens.get(26).word);
		assertEquals(38, tokens.get(26).startOffset);
		assertEquals(40, tokens.get(26).endOffset);
		assertEquals(2, tokens.get(26).word.length());
		assertEquals(2, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("一次性", tokens.get(27).word);
		assertEquals(38, tokens.get(27).startOffset);
		assertEquals(41, tokens.get(27).endOffset);
		assertEquals(3, tokens.get(27).word.length());
		assertEquals(3, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals("交", tokens.get(28).word);
		assertEquals(41, tokens.get(28).startOffset);
		assertEquals(42, tokens.get(28).endOffset);
		assertEquals(1, tokens.get(28).word.length());
		assertEquals(1, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("多少", tokens.get(29).word);
		assertEquals(42, tokens.get(29).startOffset);
		assertEquals(44, tokens.get(29).endOffset);
		assertEquals(2, tokens.get(29).word.length());
		assertEquals(2, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals("钱", tokens.get(30).word);
		assertEquals(44, tokens.get(30).startOffset);
		assertEquals(45, tokens.get(30).endOffset);
		assertEquals(1, tokens.get(30).word.length());
		assertEquals(1, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals(" ", tokens.get(31).word);
		assertEquals(45, tokens.get(31).startOffset);
		assertEquals(46, tokens.get(31).endOffset);
		assertEquals(1, tokens.get(31).word.length());
		assertEquals(1, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("\"", tokens.get(32).word);
		assertEquals(46, tokens.get(32).startOffset);
		assertEquals(47, tokens.get(32).endOffset);
		assertEquals(1, tokens.get(32).word.length());
		assertEquals(1, tokens.get(32).endOffset - tokens.get(32).startOffset);
		assertEquals("两块", tokens.get(33).word);
		assertEquals(47, tokens.get(33).startOffset);
		assertEquals(49, tokens.get(33).endOffset);
		assertEquals(2, tokens.get(33).word.length());
		assertEquals(2, tokens.get(33).endOffset - tokens.get(33).startOffset);
		assertEquals("五", tokens.get(34).word);
		assertEquals(49, tokens.get(34).startOffset);
		assertEquals(50, tokens.get(34).endOffset);
		assertEquals(1, tokens.get(34).word.length());
		assertEquals(1, tokens.get(34).endOffset - tokens.get(34).startOffset);
		assertEquals("一套", tokens.get(35).word);
		assertEquals(50, tokens.get(35).startOffset);
		assertEquals(52, tokens.get(35).endOffset);
		assertEquals(2, tokens.get(35).word.length());
		assertEquals(2, tokens.get(35).endOffset - tokens.get(35).startOffset);
		assertEquals("，", tokens.get(36).word);
		assertEquals(52, tokens.get(36).startOffset);
		assertEquals(53, tokens.get(36).endOffset);
		assertEquals(1, tokens.get(36).word.length());
		assertEquals(1, tokens.get(36).endOffset - tokens.get(36).startOffset);
		assertEquals("三块", tokens.get(37).word);
		assertEquals(53, tokens.get(37).startOffset);
		assertEquals(55, tokens.get(37).endOffset);
		assertEquals(2, tokens.get(37).word.length());
		assertEquals(2, tokens.get(37).endOffset - tokens.get(37).startOffset);
		assertEquals("八", tokens.get(38).word);
		assertEquals(55, tokens.get(38).startOffset);
		assertEquals(56, tokens.get(38).endOffset);
		assertEquals(1, tokens.get(38).word.length());
		assertEquals(1, tokens.get(38).endOffset - tokens.get(38).startOffset);
		assertEquals("一斤", tokens.get(39).word);
		assertEquals(56, tokens.get(39).startOffset);
		assertEquals(58, tokens.get(39).endOffset);
		assertEquals(2, tokens.get(39).word.length());
		assertEquals(2, tokens.get(39).endOffset - tokens.get(39).startOffset);
		assertEquals("，", tokens.get(40).word);
		assertEquals(58, tokens.get(40).startOffset);
		assertEquals(59, tokens.get(40).endOffset);
		assertEquals(1, tokens.get(40).word.length());
		assertEquals(1, tokens.get(40).endOffset - tokens.get(40).startOffset);
		assertEquals("四块", tokens.get(41).word);
		assertEquals(59, tokens.get(41).startOffset);
		assertEquals(61, tokens.get(41).endOffset);
		assertEquals(2, tokens.get(41).word.length());
		assertEquals(2, tokens.get(41).endOffset - tokens.get(41).startOffset);
		assertEquals("七", tokens.get(42).word);
		assertEquals(61, tokens.get(42).startOffset);
		assertEquals(62, tokens.get(42).endOffset);
		assertEquals(1, tokens.get(42).word.length());
		assertEquals(1, tokens.get(42).endOffset - tokens.get(42).startOffset);
		assertEquals("一本", tokens.get(43).word);
		assertEquals(62, tokens.get(43).startOffset);
		assertEquals(64, tokens.get(43).endOffset);
		assertEquals(2, tokens.get(43).word.length());
		assertEquals(2, tokens.get(43).endOffset - tokens.get(43).startOffset);
		assertEquals("，", tokens.get(44).word);
		assertEquals(64, tokens.get(44).startOffset);
		assertEquals(65, tokens.get(44).endOffset);
		assertEquals(1, tokens.get(44).word.length());
		assertEquals(1, tokens.get(44).endOffset - tokens.get(44).startOffset);
		assertEquals("五块", tokens.get(45).word);
		assertEquals(65, tokens.get(45).startOffset);
		assertEquals(67, tokens.get(45).endOffset);
		assertEquals(2, tokens.get(45).word.length());
		assertEquals(2, tokens.get(45).endOffset - tokens.get(45).startOffset);
		assertEquals("六", tokens.get(46).word);
		assertEquals(67, tokens.get(46).startOffset);
		assertEquals(68, tokens.get(46).endOffset);
		assertEquals(1, tokens.get(46).word.length());
		assertEquals(1, tokens.get(46).endOffset - tokens.get(46).startOffset);
		assertEquals("一条", tokens.get(47).word);
		assertEquals(68, tokens.get(47).startOffset);
		assertEquals(70, tokens.get(47).endOffset);
		assertEquals(2, tokens.get(47).word.length());
		assertEquals(2, tokens.get(47).endOffset - tokens.get(47).startOffset);
	}

	@Test
	public void testCase63() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("小和尚留了一个像大和尚一样的和尚头 \"我是中华人民共和国公民;我爸爸是共和党党员; 地铁和平门站 \"张晓梅去人民医院做了个B超然后去买了件T恤",
				SegMode.INDEX);
		assertEquals("小", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("和尚", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("留", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("了", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("一个", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("像", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("大", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("和尚", tokens.get(7).word);
		assertEquals(9, tokens.get(7).startOffset);
		assertEquals(11, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("一样", tokens.get(8).word);
		assertEquals(11, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("的", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(14, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("和尚", tokens.get(10).word);
		assertEquals(14, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("和尚头", tokens.get(11).word);
		assertEquals(14, tokens.get(11).startOffset);
		assertEquals(17, tokens.get(11).endOffset);
		assertEquals(3, tokens.get(11).word.length());
		assertEquals(3, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals(" ", tokens.get(12).word);
		assertEquals(17, tokens.get(12).startOffset);
		assertEquals(18, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("\"", tokens.get(13).word);
		assertEquals(18, tokens.get(13).startOffset);
		assertEquals(19, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("我", tokens.get(14).word);
		assertEquals(19, tokens.get(14).startOffset);
		assertEquals(20, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("是", tokens.get(15).word);
		assertEquals(20, tokens.get(15).startOffset);
		assertEquals(21, tokens.get(15).endOffset);
		assertEquals(1, tokens.get(15).word.length());
		assertEquals(1, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("中华", tokens.get(16).word);
		assertEquals(21, tokens.get(16).startOffset);
		assertEquals(23, tokens.get(16).endOffset);
		assertEquals(2, tokens.get(16).word.length());
		assertEquals(2, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("华人", tokens.get(17).word);
		assertEquals(22, tokens.get(17).startOffset);
		assertEquals(24, tokens.get(17).endOffset);
		assertEquals(2, tokens.get(17).word.length());
		assertEquals(2, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("人民", tokens.get(18).word);
		assertEquals(23, tokens.get(18).startOffset);
		assertEquals(25, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("共和", tokens.get(19).word);
		assertEquals(25, tokens.get(19).startOffset);
		assertEquals(27, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("共和国", tokens.get(20).word);
		assertEquals(25, tokens.get(20).startOffset);
		assertEquals(28, tokens.get(20).endOffset);
		assertEquals(3, tokens.get(20).word.length());
		assertEquals(3, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("中华人民共和国", tokens.get(21).word);
		assertEquals(21, tokens.get(21).startOffset);
		assertEquals(28, tokens.get(21).endOffset);
		assertEquals(7, tokens.get(21).word.length());
		assertEquals(7, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("公民", tokens.get(22).word);
		assertEquals(28, tokens.get(22).startOffset);
		assertEquals(30, tokens.get(22).endOffset);
		assertEquals(2, tokens.get(22).word.length());
		assertEquals(2, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals(";", tokens.get(23).word);
		assertEquals(30, tokens.get(23).startOffset);
		assertEquals(31, tokens.get(23).endOffset);
		assertEquals(1, tokens.get(23).word.length());
		assertEquals(1, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals("我", tokens.get(24).word);
		assertEquals(31, tokens.get(24).startOffset);
		assertEquals(32, tokens.get(24).endOffset);
		assertEquals(1, tokens.get(24).word.length());
		assertEquals(1, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("爸爸", tokens.get(25).word);
		assertEquals(32, tokens.get(25).startOffset);
		assertEquals(34, tokens.get(25).endOffset);
		assertEquals(2, tokens.get(25).word.length());
		assertEquals(2, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("是", tokens.get(26).word);
		assertEquals(34, tokens.get(26).startOffset);
		assertEquals(35, tokens.get(26).endOffset);
		assertEquals(1, tokens.get(26).word.length());
		assertEquals(1, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("共和", tokens.get(27).word);
		assertEquals(35, tokens.get(27).startOffset);
		assertEquals(37, tokens.get(27).endOffset);
		assertEquals(2, tokens.get(27).word.length());
		assertEquals(2, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals("共和党", tokens.get(28).word);
		assertEquals(35, tokens.get(28).startOffset);
		assertEquals(38, tokens.get(28).endOffset);
		assertEquals(3, tokens.get(28).word.length());
		assertEquals(3, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("党员", tokens.get(29).word);
		assertEquals(38, tokens.get(29).startOffset);
		assertEquals(40, tokens.get(29).endOffset);
		assertEquals(2, tokens.get(29).word.length());
		assertEquals(2, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals(";", tokens.get(30).word);
		assertEquals(40, tokens.get(30).startOffset);
		assertEquals(41, tokens.get(30).endOffset);
		assertEquals(1, tokens.get(30).word.length());
		assertEquals(1, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals(" ", tokens.get(31).word);
		assertEquals(41, tokens.get(31).startOffset);
		assertEquals(42, tokens.get(31).endOffset);
		assertEquals(1, tokens.get(31).word.length());
		assertEquals(1, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("地铁", tokens.get(32).word);
		assertEquals(42, tokens.get(32).startOffset);
		assertEquals(44, tokens.get(32).endOffset);
		assertEquals(2, tokens.get(32).word.length());
		assertEquals(2, tokens.get(32).endOffset - tokens.get(32).startOffset);
		assertEquals("和平", tokens.get(33).word);
		assertEquals(44, tokens.get(33).startOffset);
		assertEquals(46, tokens.get(33).endOffset);
		assertEquals(2, tokens.get(33).word.length());
		assertEquals(2, tokens.get(33).endOffset - tokens.get(33).startOffset);
		assertEquals("和平门", tokens.get(34).word);
		assertEquals(44, tokens.get(34).startOffset);
		assertEquals(47, tokens.get(34).endOffset);
		assertEquals(3, tokens.get(34).word.length());
		assertEquals(3, tokens.get(34).endOffset - tokens.get(34).startOffset);
		assertEquals("站", tokens.get(35).word);
		assertEquals(47, tokens.get(35).startOffset);
		assertEquals(48, tokens.get(35).endOffset);
		assertEquals(1, tokens.get(35).word.length());
		assertEquals(1, tokens.get(35).endOffset - tokens.get(35).startOffset);
		assertEquals(" ", tokens.get(36).word);
		assertEquals(48, tokens.get(36).startOffset);
		assertEquals(49, tokens.get(36).endOffset);
		assertEquals(1, tokens.get(36).word.length());
		assertEquals(1, tokens.get(36).endOffset - tokens.get(36).startOffset);
		assertEquals("\"", tokens.get(37).word);
		assertEquals(49, tokens.get(37).startOffset);
		assertEquals(50, tokens.get(37).endOffset);
		assertEquals(1, tokens.get(37).word.length());
		assertEquals(1, tokens.get(37).endOffset - tokens.get(37).startOffset);
		assertEquals("张晓梅", tokens.get(38).word);
		assertEquals(50, tokens.get(38).startOffset);
		assertEquals(53, tokens.get(38).endOffset);
		assertEquals(3, tokens.get(38).word.length());
		assertEquals(3, tokens.get(38).endOffset - tokens.get(38).startOffset);
		assertEquals("去", tokens.get(39).word);
		assertEquals(53, tokens.get(39).startOffset);
		assertEquals(54, tokens.get(39).endOffset);
		assertEquals(1, tokens.get(39).word.length());
		assertEquals(1, tokens.get(39).endOffset - tokens.get(39).startOffset);
		assertEquals("人民", tokens.get(40).word);
		assertEquals(54, tokens.get(40).startOffset);
		assertEquals(56, tokens.get(40).endOffset);
		assertEquals(2, tokens.get(40).word.length());
		assertEquals(2, tokens.get(40).endOffset - tokens.get(40).startOffset);
		assertEquals("医院", tokens.get(41).word);
		assertEquals(56, tokens.get(41).startOffset);
		assertEquals(58, tokens.get(41).endOffset);
		assertEquals(2, tokens.get(41).word.length());
		assertEquals(2, tokens.get(41).endOffset - tokens.get(41).startOffset);
		assertEquals("做", tokens.get(42).word);
		assertEquals(58, tokens.get(42).startOffset);
		assertEquals(59, tokens.get(42).endOffset);
		assertEquals(1, tokens.get(42).word.length());
		assertEquals(1, tokens.get(42).endOffset - tokens.get(42).startOffset);
		assertEquals("了", tokens.get(43).word);
		assertEquals(59, tokens.get(43).startOffset);
		assertEquals(60, tokens.get(43).endOffset);
		assertEquals(1, tokens.get(43).word.length());
		assertEquals(1, tokens.get(43).endOffset - tokens.get(43).startOffset);
		assertEquals("个", tokens.get(44).word);
		assertEquals(60, tokens.get(44).startOffset);
		assertEquals(61, tokens.get(44).endOffset);
		assertEquals(1, tokens.get(44).word.length());
		assertEquals(1, tokens.get(44).endOffset - tokens.get(44).startOffset);
		assertEquals("b超", tokens.get(45).word);
		assertEquals(61, tokens.get(45).startOffset);
		assertEquals(63, tokens.get(45).endOffset);
		assertEquals(2, tokens.get(45).word.length());
		assertEquals(2, tokens.get(45).endOffset - tokens.get(45).startOffset);
		assertEquals("然后", tokens.get(46).word);
		assertEquals(63, tokens.get(46).startOffset);
		assertEquals(65, tokens.get(46).endOffset);
		assertEquals(2, tokens.get(46).word.length());
		assertEquals(2, tokens.get(46).endOffset - tokens.get(46).startOffset);
		assertEquals("去", tokens.get(47).word);
		assertEquals(65, tokens.get(47).startOffset);
		assertEquals(66, tokens.get(47).endOffset);
		assertEquals(1, tokens.get(47).word.length());
		assertEquals(1, tokens.get(47).endOffset - tokens.get(47).startOffset);
		assertEquals("买", tokens.get(48).word);
		assertEquals(66, tokens.get(48).startOffset);
		assertEquals(67, tokens.get(48).endOffset);
		assertEquals(1, tokens.get(48).word.length());
		assertEquals(1, tokens.get(48).endOffset - tokens.get(48).startOffset);
		assertEquals("了", tokens.get(49).word);
		assertEquals(67, tokens.get(49).startOffset);
		assertEquals(68, tokens.get(49).endOffset);
		assertEquals(1, tokens.get(49).word.length());
		assertEquals(1, tokens.get(49).endOffset - tokens.get(49).startOffset);
		assertEquals("件", tokens.get(50).word);
		assertEquals(68, tokens.get(50).startOffset);
		assertEquals(69, tokens.get(50).endOffset);
		assertEquals(1, tokens.get(50).word.length());
		assertEquals(1, tokens.get(50).endOffset - tokens.get(50).startOffset);
		assertEquals("t恤", tokens.get(51).word);
		assertEquals(69, tokens.get(51).startOffset);
		assertEquals(71, tokens.get(51).endOffset);
		assertEquals(2, tokens.get(51).word.length());
		assertEquals(2, tokens.get(51).endOffset - tokens.get(51).startOffset);
	}

	@Test
	public void testCase64() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("AT&T是一件不错的公司，给你发offer了吗？ \"C++和c#是什么关系？11+122=133，是吗？PI=3.14159", SegMode.INDEX);
		assertEquals("at&t", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(4, tokens.get(0).endOffset);
		assertEquals(4, tokens.get(0).word.length());
		assertEquals(4, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("是", tokens.get(1).word);
		assertEquals(4, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("一件", tokens.get(2).word);
		assertEquals(5, tokens.get(2).startOffset);
		assertEquals(7, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("不错", tokens.get(3).word);
		assertEquals(7, tokens.get(3).startOffset);
		assertEquals(9, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(9, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("公司", tokens.get(5).word);
		assertEquals(10, tokens.get(5).startOffset);
		assertEquals(12, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("，", tokens.get(6).word);
		assertEquals(12, tokens.get(6).startOffset);
		assertEquals(13, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("给", tokens.get(7).word);
		assertEquals(13, tokens.get(7).startOffset);
		assertEquals(14, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("你", tokens.get(8).word);
		assertEquals(14, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("发", tokens.get(9).word);
		assertEquals(15, tokens.get(9).startOffset);
		assertEquals(16, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("offer", tokens.get(10).word);
		assertEquals(16, tokens.get(10).startOffset);
		assertEquals(21, tokens.get(10).endOffset);
		assertEquals(5, tokens.get(10).word.length());
		assertEquals(5, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("了", tokens.get(11).word);
		assertEquals(21, tokens.get(11).startOffset);
		assertEquals(22, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("吗", tokens.get(12).word);
		assertEquals(22, tokens.get(12).startOffset);
		assertEquals(23, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("？", tokens.get(13).word);
		assertEquals(23, tokens.get(13).startOffset);
		assertEquals(24, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals(" ", tokens.get(14).word);
		assertEquals(24, tokens.get(14).startOffset);
		assertEquals(25, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("\"", tokens.get(15).word);
		assertEquals(25, tokens.get(15).startOffset);
		assertEquals(26, tokens.get(15).endOffset);
		assertEquals(1, tokens.get(15).word.length());
		assertEquals(1, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("c++", tokens.get(16).word);
		assertEquals(26, tokens.get(16).startOffset);
		assertEquals(29, tokens.get(16).endOffset);
		assertEquals(3, tokens.get(16).word.length());
		assertEquals(3, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("和", tokens.get(17).word);
		assertEquals(29, tokens.get(17).startOffset);
		assertEquals(30, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("c#", tokens.get(18).word);
		assertEquals(30, tokens.get(18).startOffset);
		assertEquals(32, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("是", tokens.get(19).word);
		assertEquals(32, tokens.get(19).startOffset);
		assertEquals(33, tokens.get(19).endOffset);
		assertEquals(1, tokens.get(19).word.length());
		assertEquals(1, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("什么", tokens.get(20).word);
		assertEquals(33, tokens.get(20).startOffset);
		assertEquals(35, tokens.get(20).endOffset);
		assertEquals(2, tokens.get(20).word.length());
		assertEquals(2, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("关系", tokens.get(21).word);
		assertEquals(35, tokens.get(21).startOffset);
		assertEquals(37, tokens.get(21).endOffset);
		assertEquals(2, tokens.get(21).word.length());
		assertEquals(2, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("？", tokens.get(22).word);
		assertEquals(37, tokens.get(22).startOffset);
		assertEquals(38, tokens.get(22).endOffset);
		assertEquals(1, tokens.get(22).word.length());
		assertEquals(1, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("11", tokens.get(23).word);
		assertEquals(38, tokens.get(23).startOffset);
		assertEquals(40, tokens.get(23).endOffset);
		assertEquals(2, tokens.get(23).word.length());
		assertEquals(2, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals("+", tokens.get(24).word);
		assertEquals(40, tokens.get(24).startOffset);
		assertEquals(41, tokens.get(24).endOffset);
		assertEquals(1, tokens.get(24).word.length());
		assertEquals(1, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("122", tokens.get(25).word);
		assertEquals(41, tokens.get(25).startOffset);
		assertEquals(44, tokens.get(25).endOffset);
		assertEquals(3, tokens.get(25).word.length());
		assertEquals(3, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("=", tokens.get(26).word);
		assertEquals(44, tokens.get(26).startOffset);
		assertEquals(45, tokens.get(26).endOffset);
		assertEquals(1, tokens.get(26).word.length());
		assertEquals(1, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("133", tokens.get(27).word);
		assertEquals(45, tokens.get(27).startOffset);
		assertEquals(48, tokens.get(27).endOffset);
		assertEquals(3, tokens.get(27).word.length());
		assertEquals(3, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals("，", tokens.get(28).word);
		assertEquals(48, tokens.get(28).startOffset);
		assertEquals(49, tokens.get(28).endOffset);
		assertEquals(1, tokens.get(28).word.length());
		assertEquals(1, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("是", tokens.get(29).word);
		assertEquals(49, tokens.get(29).startOffset);
		assertEquals(50, tokens.get(29).endOffset);
		assertEquals(1, tokens.get(29).word.length());
		assertEquals(1, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals("吗", tokens.get(30).word);
		assertEquals(50, tokens.get(30).startOffset);
		assertEquals(51, tokens.get(30).endOffset);
		assertEquals(1, tokens.get(30).word.length());
		assertEquals(1, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals("？", tokens.get(31).word);
		assertEquals(51, tokens.get(31).startOffset);
		assertEquals(52, tokens.get(31).endOffset);
		assertEquals(1, tokens.get(31).word.length());
		assertEquals(1, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("pi", tokens.get(32).word);
		assertEquals(52, tokens.get(32).startOffset);
		assertEquals(54, tokens.get(32).endOffset);
		assertEquals(2, tokens.get(32).word.length());
		assertEquals(2, tokens.get(32).endOffset - tokens.get(32).startOffset);
		assertEquals("=", tokens.get(33).word);
		assertEquals(54, tokens.get(33).startOffset);
		assertEquals(55, tokens.get(33).endOffset);
		assertEquals(1, tokens.get(33).word.length());
		assertEquals(1, tokens.get(33).endOffset - tokens.get(33).startOffset);
		assertEquals("3.14159", tokens.get(34).word);
		assertEquals(55, tokens.get(34).startOffset);
		assertEquals(62, tokens.get(34).endOffset);
		assertEquals(7, tokens.get(34).word.length());
		assertEquals(7, tokens.get(34).endOffset - tokens.get(34).startOffset);
	}

	@Test
	public void testCase65() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("你认识那个和主席握手的的哥吗？他开一辆黑色的士。", SegMode.INDEX);
		assertEquals("你", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("认识", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("那个", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("和", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("主席", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("握手", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("的哥", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("吗", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("？", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("他开", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(17, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("一辆", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(19, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("黑色", tokens.get(12).word);
		assertEquals(19, tokens.get(12).startOffset);
		assertEquals(21, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("的士", tokens.get(13).word);
		assertEquals(21, tokens.get(13).startOffset);
		assertEquals(23, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("。", tokens.get(14).word);
		assertEquals(23, tokens.get(14).startOffset);
		assertEquals(24, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
	}

	@Test
	public void testCase66() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("枪杆子中出政权", SegMode.INDEX);
		assertEquals("枪杆", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("杆子", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("枪杆子", tokens.get(2).word);
		assertEquals(0, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("中出", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("政权", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase67() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("找小姐", SegMode.INDEX);
		assertEquals("找", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("小姐", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
	}

	@Test
	public void testCase68() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("找美女", SegMode.INDEX);
		assertEquals("找", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("美女", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
	}

	@Test
	public void testCase69() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("找小妹", SegMode.INDEX);
		assertEquals("找", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("小妹", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
	}

	@Test
	public void testCase70() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("学生妹", SegMode.INDEX);
		assertEquals("学生", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("学生妹", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
	}

	@Test
	public void testCase71() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("职业狐狸精", SegMode.INDEX);
		assertEquals("职业", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("狐狸", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("狐狸精", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase72() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("男公关", SegMode.INDEX);
		assertEquals("公关", tokens.get(0).word);
		assertEquals(1, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("男公关", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
	}

	@Test
	public void testCase73() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("上门", SegMode.INDEX);
		assertEquals("上门", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase74() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("抽獎", SegMode.INDEX);
		assertEquals("抽獎", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase75() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("好声音", SegMode.INDEX);
		assertEquals("好", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("声音", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
	}

	@Test
	public void testCase76() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("好聲音", SegMode.INDEX);
		assertEquals("好聲音", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase77() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("夢之声", SegMode.INDEX);
		assertEquals("夢之声", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase78() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("夢之聲", SegMode.INDEX);
		assertEquals("夢之聲", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase79() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("訂票", SegMode.INDEX);
		assertEquals("訂票", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase80() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("改簽", SegMode.INDEX);
		assertEquals("改簽", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase81() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("熱线", SegMode.INDEX);
		assertEquals("熱线", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase82() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("熱線", SegMode.INDEX);
		assertEquals("熱線", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase83() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("热線", SegMode.INDEX);
		assertEquals("热線", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase84() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("電话", SegMode.INDEX);
		assertEquals("電话", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase85() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("電話", SegMode.INDEX);
		assertEquals("電話", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase86() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("醫院", SegMode.INDEX);
		assertEquals("醫院", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase87() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("代刷", SegMode.INDEX);
		assertEquals("代刷", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase88() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("撲剋牌", SegMode.INDEX);
		assertEquals("撲", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("剋", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("牌", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase89() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("137-1234-1234", SegMode.INDEX);
		assertEquals("137", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("-", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("1234", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(8, tokens.get(2).endOffset);
		assertEquals(4, tokens.get(2).word.length());
		assertEquals(4, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("-", tokens.get(3).word);
		assertEquals(8, tokens.get(3).startOffset);
		assertEquals(9, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("1234", tokens.get(4).word);
		assertEquals(9, tokens.get(4).startOffset);
		assertEquals(13, tokens.get(4).endOffset);
		assertEquals(4, tokens.get(4).word.length());
		assertEquals(4, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase90() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("这是一个伸手不见五指的黑夜。我叫孙悟空，我爱北京，我爱Python和C++。", SegMode.INDEX);
		assertEquals("这是", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("一个", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("伸手", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("不见", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("五指", tokens.get(4).word);
		assertEquals(8, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("伸手不见五指", tokens.get(5).word);
		assertEquals(4, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(6, tokens.get(5).word.length());
		assertEquals(6, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("黑夜", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("。", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("我", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("叫", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("悟空", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(19, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("孙悟空", tokens.get(12).word);
		assertEquals(16, tokens.get(12).startOffset);
		assertEquals(19, tokens.get(12).endOffset);
		assertEquals(3, tokens.get(12).word.length());
		assertEquals(3, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("，", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(20, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("我", tokens.get(14).word);
		assertEquals(20, tokens.get(14).startOffset);
		assertEquals(21, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("爱", tokens.get(15).word);
		assertEquals(21, tokens.get(15).startOffset);
		assertEquals(22, tokens.get(15).endOffset);
		assertEquals(1, tokens.get(15).word.length());
		assertEquals(1, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("北京", tokens.get(16).word);
		assertEquals(22, tokens.get(16).startOffset);
		assertEquals(24, tokens.get(16).endOffset);
		assertEquals(2, tokens.get(16).word.length());
		assertEquals(2, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("，", tokens.get(17).word);
		assertEquals(24, tokens.get(17).startOffset);
		assertEquals(25, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("我", tokens.get(18).word);
		assertEquals(25, tokens.get(18).startOffset);
		assertEquals(26, tokens.get(18).endOffset);
		assertEquals(1, tokens.get(18).word.length());
		assertEquals(1, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("爱", tokens.get(19).word);
		assertEquals(26, tokens.get(19).startOffset);
		assertEquals(27, tokens.get(19).endOffset);
		assertEquals(1, tokens.get(19).word.length());
		assertEquals(1, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("python", tokens.get(20).word);
		assertEquals(27, tokens.get(20).startOffset);
		assertEquals(33, tokens.get(20).endOffset);
		assertEquals(6, tokens.get(20).word.length());
		assertEquals(6, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("和", tokens.get(21).word);
		assertEquals(33, tokens.get(21).startOffset);
		assertEquals(34, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("c++", tokens.get(22).word);
		assertEquals(34, tokens.get(22).startOffset);
		assertEquals(37, tokens.get(22).endOffset);
		assertEquals(3, tokens.get(22).word.length());
		assertEquals(3, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("。", tokens.get(23).word);
		assertEquals(37, tokens.get(23).startOffset);
		assertEquals(38, tokens.get(23).endOffset);
		assertEquals(1, tokens.get(23).word.length());
		assertEquals(1, tokens.get(23).endOffset - tokens.get(23).startOffset);
	}

	@Test
	public void testCase91() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我不喜欢日本和服。", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("不", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("喜欢", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("日本", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("和服", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("。", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase92() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("雷猴回归人间。", SegMode.INDEX);
		assertEquals("雷猴", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("回归", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("人间", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("。", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase93() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("工信处女干事每月经过下属科室都要亲口交代24口交换机等技术性器件的安装工作", SegMode.INDEX);
		assertEquals("工信处", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("干事", tokens.get(1).word);
		assertEquals(4, tokens.get(1).startOffset);
		assertEquals(6, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("女干事", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("每月", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("经过", tokens.get(4).word);
		assertEquals(8, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("下属", tokens.get(5).word);
		assertEquals(10, tokens.get(5).startOffset);
		assertEquals(12, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("科室", tokens.get(6).word);
		assertEquals(12, tokens.get(6).startOffset);
		assertEquals(14, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("都", tokens.get(7).word);
		assertEquals(14, tokens.get(7).startOffset);
		assertEquals(15, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("要", tokens.get(8).word);
		assertEquals(15, tokens.get(8).startOffset);
		assertEquals(16, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("亲口", tokens.get(9).word);
		assertEquals(16, tokens.get(9).startOffset);
		assertEquals(18, tokens.get(9).endOffset);
		assertEquals(2, tokens.get(9).word.length());
		assertEquals(2, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("交代", tokens.get(10).word);
		assertEquals(18, tokens.get(10).startOffset);
		assertEquals(20, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("24", tokens.get(11).word);
		assertEquals(20, tokens.get(11).startOffset);
		assertEquals(22, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("口", tokens.get(12).word);
		assertEquals(22, tokens.get(12).startOffset);
		assertEquals(23, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("交换", tokens.get(13).word);
		assertEquals(23, tokens.get(13).startOffset);
		assertEquals(25, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("换机", tokens.get(14).word);
		assertEquals(24, tokens.get(14).startOffset);
		assertEquals(26, tokens.get(14).endOffset);
		assertEquals(2, tokens.get(14).word.length());
		assertEquals(2, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("交换机", tokens.get(15).word);
		assertEquals(23, tokens.get(15).startOffset);
		assertEquals(26, tokens.get(15).endOffset);
		assertEquals(3, tokens.get(15).word.length());
		assertEquals(3, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("等", tokens.get(16).word);
		assertEquals(26, tokens.get(16).startOffset);
		assertEquals(27, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("技术", tokens.get(17).word);
		assertEquals(27, tokens.get(17).startOffset);
		assertEquals(29, tokens.get(17).endOffset);
		assertEquals(2, tokens.get(17).word.length());
		assertEquals(2, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("技术性", tokens.get(18).word);
		assertEquals(27, tokens.get(18).startOffset);
		assertEquals(30, tokens.get(18).endOffset);
		assertEquals(3, tokens.get(18).word.length());
		assertEquals(3, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("器件", tokens.get(19).word);
		assertEquals(30, tokens.get(19).startOffset);
		assertEquals(32, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("的", tokens.get(20).word);
		assertEquals(32, tokens.get(20).startOffset);
		assertEquals(33, tokens.get(20).endOffset);
		assertEquals(1, tokens.get(20).word.length());
		assertEquals(1, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("安装", tokens.get(21).word);
		assertEquals(33, tokens.get(21).startOffset);
		assertEquals(35, tokens.get(21).endOffset);
		assertEquals(2, tokens.get(21).word.length());
		assertEquals(2, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("工作", tokens.get(22).word);
		assertEquals(35, tokens.get(22).startOffset);
		assertEquals(37, tokens.get(22).endOffset);
		assertEquals(2, tokens.get(22).word.length());
		assertEquals(2, tokens.get(22).endOffset - tokens.get(22).startOffset);
	}

	@Test
	public void testCase94() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我需要廉租房", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("需要", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("廉租", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("租房", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("廉租房", tokens.get(4).word);
		assertEquals(3, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(3, tokens.get(4).word.length());
		assertEquals(3, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase95() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("永和服装饰品有限公司", SegMode.INDEX);
		assertEquals("永和", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("服装", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("饰品", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("有限", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("公司", tokens.get(4).word);
		assertEquals(8, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("有限公司", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(4, tokens.get(5).word.length());
		assertEquals(4, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase96() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我爱北京天安门", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("爱", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("北京", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("天安", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("天安门", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(3, tokens.get(4).word.length());
		assertEquals(3, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase97() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("abc", SegMode.INDEX);
		assertEquals("abc", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase98() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("隐马尔可夫", SegMode.INDEX);
		assertEquals("隐", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("可夫", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("马尔可", tokens.get(2).word);
		assertEquals(1, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("马尔可夫", tokens.get(3).word);
		assertEquals(1, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(4, tokens.get(3).word.length());
		assertEquals(4, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase99() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("雷猴是个好网站", SegMode.INDEX);
		assertEquals("雷猴", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("是", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("个", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("好", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("网站", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase100() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("“,”和“SOFTware（软件）”两部分组成", SegMode.INDEX);
		assertEquals("“", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(",", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("”", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("和", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(4, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("“", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(5, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("software", tokens.get(5).word);
		assertEquals(5, tokens.get(5).startOffset);
		assertEquals(13, tokens.get(5).endOffset);
		assertEquals(8, tokens.get(5).word.length());
		assertEquals(8, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("（", tokens.get(6).word);
		assertEquals(13, tokens.get(6).startOffset);
		assertEquals(14, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("软件", tokens.get(7).word);
		assertEquals(14, tokens.get(7).startOffset);
		assertEquals(16, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("）", tokens.get(8).word);
		assertEquals(16, tokens.get(8).startOffset);
		assertEquals(17, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("”", tokens.get(9).word);
		assertEquals(17, tokens.get(9).startOffset);
		assertEquals(18, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("两", tokens.get(10).word);
		assertEquals(18, tokens.get(10).startOffset);
		assertEquals(19, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("部分", tokens.get(11).word);
		assertEquals(19, tokens.get(11).startOffset);
		assertEquals(21, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("组成", tokens.get(12).word);
		assertEquals(21, tokens.get(12).startOffset);
		assertEquals(23, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
	}

	@Test
	public void testCase101() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("草泥马和欺实马是今年的流行词汇", SegMode.INDEX);
		assertEquals("草泥马", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("和", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("欺实", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("马", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("是", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("今年", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("流行", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("词汇", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase102() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("伊藤洋华堂总府店", SegMode.INDEX);
		assertEquals("伊藤", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("洋华堂", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("总府", tokens.get(2).word);
		assertEquals(5, tokens.get(2).startOffset);
		assertEquals(7, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("店", tokens.get(3).word);
		assertEquals(7, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase103() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("中国科学院计算技术研究所", SegMode.INDEX);
		assertEquals("中国", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("科学", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("学院", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("计算", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("技术", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("研究", tokens.get(5).word);
		assertEquals(9, tokens.get(5).startOffset);
		assertEquals(11, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("科学院", tokens.get(6).word);
		assertEquals(2, tokens.get(6).startOffset);
		assertEquals(5, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("研究所", tokens.get(7).word);
		assertEquals(9, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(3, tokens.get(7).word.length());
		assertEquals(3, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("中国科学院计算技术研究所", tokens.get(8).word);
		assertEquals(0, tokens.get(8).startOffset);
		assertEquals(12, tokens.get(8).endOffset);
		assertEquals(12, tokens.get(8).word.length());
		assertEquals(12, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase104() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("罗密欧与朱丽叶", SegMode.INDEX);
		assertEquals("罗密欧", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("与", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("朱丽叶", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(7, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase105() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我购买了道具和服装", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("购买", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("道具", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("和", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("服装", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase106() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("PS: 我觉得开源有一个好处，就是能够敦促自己不断改进，避免敞帚自珍", SegMode.INDEX);
		assertEquals("ps", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(":", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals(" ", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("我", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("觉得", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("开源", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("有", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("一个", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("好处", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("，", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("就是", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(17, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("能够", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(19, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("敦促", tokens.get(12).word);
		assertEquals(19, tokens.get(12).startOffset);
		assertEquals(21, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("自己", tokens.get(13).word);
		assertEquals(21, tokens.get(13).startOffset);
		assertEquals(23, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("不断", tokens.get(14).word);
		assertEquals(23, tokens.get(14).startOffset);
		assertEquals(25, tokens.get(14).endOffset);
		assertEquals(2, tokens.get(14).word.length());
		assertEquals(2, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("改进", tokens.get(15).word);
		assertEquals(25, tokens.get(15).startOffset);
		assertEquals(27, tokens.get(15).endOffset);
		assertEquals(2, tokens.get(15).word.length());
		assertEquals(2, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("不断改进", tokens.get(16).word);
		assertEquals(23, tokens.get(16).startOffset);
		assertEquals(27, tokens.get(16).endOffset);
		assertEquals(4, tokens.get(16).word.length());
		assertEquals(4, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("，", tokens.get(17).word);
		assertEquals(27, tokens.get(17).startOffset);
		assertEquals(28, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("避免", tokens.get(18).word);
		assertEquals(28, tokens.get(18).startOffset);
		assertEquals(30, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("敞帚", tokens.get(19).word);
		assertEquals(30, tokens.get(19).startOffset);
		assertEquals(32, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("自珍", tokens.get(20).word);
		assertEquals(32, tokens.get(20).startOffset);
		assertEquals(34, tokens.get(20).endOffset);
		assertEquals(2, tokens.get(20).word.length());
		assertEquals(2, tokens.get(20).endOffset - tokens.get(20).startOffset);
	}

	@Test
	public void testCase107() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("湖北省石首市", SegMode.INDEX);
		assertEquals("湖北", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("湖北省", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("石首", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("石首市", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(3, tokens.get(3).word.length());
		assertEquals(3, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase108() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("湖北省十堰市", SegMode.INDEX);
		assertEquals("湖北", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("湖北省", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("十堰", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("十堰市", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(3, tokens.get(3).word.length());
		assertEquals(3, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase109() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("总经理完成了这件事情", SegMode.INDEX);
		assertEquals("经理", tokens.get(0).word);
		assertEquals(1, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("总经理", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("完成", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("了", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("这件", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("事情", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase110() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("电脑修好了", SegMode.INDEX);
		assertEquals("电脑", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("修好", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase111() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("做好了这件事情就一了百了了", SegMode.INDEX);
		assertEquals("做好", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("了", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("这件", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("事情", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("就", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("一了百了", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(12, tokens.get(5).endOffset);
		assertEquals(4, tokens.get(5).word.length());
		assertEquals(4, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("了", tokens.get(6).word);
		assertEquals(12, tokens.get(6).startOffset);
		assertEquals(13, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase112() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("人们审美的观点是不同的", SegMode.INDEX);
		assertEquals("人们", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("审美", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("观点", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("是", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("不同", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase113() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我们买了一个美的空调", SegMode.INDEX);
		assertEquals("我们", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("买", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("一个", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("美的", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("空调", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase114() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("线程初始化时我们要注意", SegMode.INDEX);
		assertEquals("线程", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("初始", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("初始化", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("时", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("我们", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("要", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("注意", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase115() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("一个分子是由好多原子组织成的", SegMode.INDEX);
		assertEquals("一个", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("分子", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("是", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("由", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("好多", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("原子", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("组织", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(12, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("成", tokens.get(7).word);
		assertEquals(12, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase116() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("祝你马到功成", SegMode.INDEX);
		assertEquals("祝", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("你", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("马到功成", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(4, tokens.get(2).word.length());
		assertEquals(4, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase117() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("他掉进了无底洞里", SegMode.INDEX);
		assertEquals("他", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("掉", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("进", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("了", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(4, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("无底", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("无底洞", tokens.get(5).word);
		assertEquals(4, tokens.get(5).startOffset);
		assertEquals(7, tokens.get(5).endOffset);
		assertEquals(3, tokens.get(5).word.length());
		assertEquals(3, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("里", tokens.get(6).word);
		assertEquals(7, tokens.get(6).startOffset);
		assertEquals(8, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase118() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("中国的首都是北京", SegMode.INDEX);
		assertEquals("中国", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("的", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("首都", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("是", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("北京", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase119() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("孙君意", SegMode.INDEX);
		assertEquals("孙君意", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase120() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("外交部发言人马朝旭", SegMode.INDEX);
		assertEquals("外交", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("外交部", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("发言", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("发言人", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(3, tokens.get(3).word.length());
		assertEquals(3, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("马朝旭", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(3, tokens.get(4).word.length());
		assertEquals(3, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase121() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("领导人会议和第四届东亚峰会", SegMode.INDEX);
		assertEquals("领导", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("领导人", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("会议", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("和", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("第四", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("四届", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("第四届", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("东亚", tokens.get(7).word);
		assertEquals(9, tokens.get(7).startOffset);
		assertEquals(11, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("峰会", tokens.get(8).word);
		assertEquals(11, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase122() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("在过去的这五年", SegMode.INDEX);
		assertEquals("在", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("过去", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("这", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("五年", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase123() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("还需要很长的路要走", SegMode.INDEX);
		assertEquals("还", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("需要", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("很长", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("的", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("路", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("要", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("走", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase124() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("60周年首都阅兵", SegMode.INDEX);
		assertEquals("60", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("周年", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("首都", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("阅兵", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase125() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("你好人们审美的观点是不同的", SegMode.INDEX);
		assertEquals("你好", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("人们", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("审美", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("的", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("观点", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("是", tokens.get(5).word);
		assertEquals(9, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("不同", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(12, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("的", tokens.get(7).word);
		assertEquals(12, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
	}

	@Test
	public void testCase126() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("买水果然后来世博园", SegMode.INDEX);
		assertEquals("买", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("水果", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("然后", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("来", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("世博", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("博园", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("世博园", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase127() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("买水果然后去世博园", SegMode.INDEX);
		assertEquals("买", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("水果", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("然后", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("去", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("世博", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("博园", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("世博园", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase128() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("但是后来我才知道你是对的", SegMode.INDEX);
		assertEquals("但是", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("后来", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("我", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("才", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("知道", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("你", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("是", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("对", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(11, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(11, tokens.get(8).startOffset);
		assertEquals(12, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase129() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("存在即合理", SegMode.INDEX);
		assertEquals("存在", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("即", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("合理", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase130() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("的的的的的在的的的的就以和和和", SegMode.INDEX);
		assertEquals("的", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("的", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("的", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(4, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(5, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("在", tokens.get(5).word);
		assertEquals(5, tokens.get(5).startOffset);
		assertEquals(6, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(7, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("的", tokens.get(7).word);
		assertEquals(7, tokens.get(7).startOffset);
		assertEquals(8, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(8, tokens.get(8).startOffset);
		assertEquals(9, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("的", tokens.get(9).word);
		assertEquals(9, tokens.get(9).startOffset);
		assertEquals(10, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("就", tokens.get(10).word);
		assertEquals(10, tokens.get(10).startOffset);
		assertEquals(11, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("以", tokens.get(11).word);
		assertEquals(11, tokens.get(11).startOffset);
		assertEquals(12, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("和", tokens.get(12).word);
		assertEquals(12, tokens.get(12).startOffset);
		assertEquals(13, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("和", tokens.get(13).word);
		assertEquals(13, tokens.get(13).startOffset);
		assertEquals(14, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("和", tokens.get(14).word);
		assertEquals(14, tokens.get(14).startOffset);
		assertEquals(15, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
	}

	@Test
	public void testCase131() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("I love你，不以为耻，反以为rong", SegMode.INDEX);
		assertEquals("i", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(" ", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("love", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(4, tokens.get(2).word.length());
		assertEquals(4, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("你", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("，", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("不以", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("以为", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("不以为耻", tokens.get(7).word);
		assertEquals(8, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(4, tokens.get(7).word.length());
		assertEquals(4, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("，", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("反", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(14, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("以为", tokens.get(10).word);
		assertEquals(14, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("rong", tokens.get(11).word);
		assertEquals(16, tokens.get(11).startOffset);
		assertEquals(20, tokens.get(11).endOffset);
		assertEquals(4, tokens.get(11).word.length());
		assertEquals(4, tokens.get(11).endOffset - tokens.get(11).startOffset);
	}

	@Test
	public void testCase132() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("因", SegMode.INDEX);
		assertEquals("因", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase134() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("hello你好人们审美的观点是不同的", SegMode.INDEX);
		assertEquals("hello", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(5, tokens.get(0).endOffset);
		assertEquals(5, tokens.get(0).word.length());
		assertEquals(5, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("你好", tokens.get(1).word);
		assertEquals(5, tokens.get(1).startOffset);
		assertEquals(7, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("人们", tokens.get(2).word);
		assertEquals(7, tokens.get(2).startOffset);
		assertEquals(9, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("审美", tokens.get(3).word);
		assertEquals(9, tokens.get(3).startOffset);
		assertEquals(11, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(11, tokens.get(4).startOffset);
		assertEquals(12, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("观点", tokens.get(5).word);
		assertEquals(12, tokens.get(5).startOffset);
		assertEquals(14, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("是", tokens.get(6).word);
		assertEquals(14, tokens.get(6).startOffset);
		assertEquals(15, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("不同", tokens.get(7).word);
		assertEquals(15, tokens.get(7).startOffset);
		assertEquals(17, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(17, tokens.get(8).startOffset);
		assertEquals(18, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase135() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("很好但主要是基于网页形式", SegMode.INDEX);
		assertEquals("很", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("好", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("但", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("主要", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("是", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("基于", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("网页", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("形式", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
	}

	@Test
	public void testCase136() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("hello你好人们审美的观点是不同的", SegMode.INDEX);
		assertEquals("hello", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(5, tokens.get(0).endOffset);
		assertEquals(5, tokens.get(0).word.length());
		assertEquals(5, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("你好", tokens.get(1).word);
		assertEquals(5, tokens.get(1).startOffset);
		assertEquals(7, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("人们", tokens.get(2).word);
		assertEquals(7, tokens.get(2).startOffset);
		assertEquals(9, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("审美", tokens.get(3).word);
		assertEquals(9, tokens.get(3).startOffset);
		assertEquals(11, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(11, tokens.get(4).startOffset);
		assertEquals(12, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("观点", tokens.get(5).word);
		assertEquals(12, tokens.get(5).startOffset);
		assertEquals(14, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("是", tokens.get(6).word);
		assertEquals(14, tokens.get(6).startOffset);
		assertEquals(15, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("不同", tokens.get(7).word);
		assertEquals(15, tokens.get(7).startOffset);
		assertEquals(17, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("的", tokens.get(8).word);
		assertEquals(17, tokens.get(8).startOffset);
		assertEquals(18, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase137() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("为什么我不能拥有想要的生活", SegMode.INDEX);
		assertEquals("什么", tokens.get(0).word);
		assertEquals(1, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("为什么", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("我", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("不能", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("拥有", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("想要", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("生活", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
	}

	@Test
	public void testCase138() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("后来我才", SegMode.INDEX);
		assertEquals("后来", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("我", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("才", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase139() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("此次来中国是为了", SegMode.INDEX);
		assertEquals("此次", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("来", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("中国", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("是", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("为了", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase140() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("使用了它就可以解决一些问题", SegMode.INDEX);
		assertEquals("使用", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("了", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("它", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("就", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("可以", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("解决", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("一些", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("问题", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
	}

	@Test
	public void testCase141() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process(",使用了它就可以解决一些问题", SegMode.INDEX);
		assertEquals(",", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("使用", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("它", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("就", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("可以", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("解决", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("一些", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("问题", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase142() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("其实使用了它就可以解决一些问题", SegMode.INDEX);
		assertEquals("其实", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("使用", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("它", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("就", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("可以", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("解决", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("一些", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("问题", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase143() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("好人使用了它就可以解决一些问题", SegMode.INDEX);
		assertEquals("好人", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("使用", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("了", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("它", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("就", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("可以", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("解决", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("一些", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("问题", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
	}

	@Test
	public void testCase144() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("是因为和国家", SegMode.INDEX);
		assertEquals("因为", tokens.get(0).word);
		assertEquals(1, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("是因为", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("和", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("国家", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase145() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("老年搜索还支持", SegMode.INDEX);
		assertEquals("老年", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("搜索", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("还", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("支持", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase146() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process(
				"干脆就把那部蒙人的闲法给废了拉倒！RT @laoshipukong : 27日，全国人大常委会第三次审议侵权责任法草案，删除了有关医疗损害责任“举证倒置”的规定。在医患纠纷中本已处于弱势地位的消费者由此将陷入万劫不复的境地。 ",
				SegMode.INDEX);
		assertEquals("干脆", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("就", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("把", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("那部", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("蒙人", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("的", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("闲法", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("给", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("废", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("了", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(14, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("拉倒", tokens.get(10).word);
		assertEquals(14, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("！", tokens.get(11).word);
		assertEquals(16, tokens.get(11).startOffset);
		assertEquals(17, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("rt", tokens.get(12).word);
		assertEquals(17, tokens.get(12).startOffset);
		assertEquals(19, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals(" ", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(20, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("@", tokens.get(14).word);
		assertEquals(20, tokens.get(14).startOffset);
		assertEquals(21, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("laoshipukong", tokens.get(15).word);
		assertEquals(21, tokens.get(15).startOffset);
		assertEquals(33, tokens.get(15).endOffset);
		assertEquals(12, tokens.get(15).word.length());
		assertEquals(12, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals(" ", tokens.get(16).word);
		assertEquals(33, tokens.get(16).startOffset);
		assertEquals(34, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals(":", tokens.get(17).word);
		assertEquals(34, tokens.get(17).startOffset);
		assertEquals(35, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals(" ", tokens.get(18).word);
		assertEquals(35, tokens.get(18).startOffset);
		assertEquals(36, tokens.get(18).endOffset);
		assertEquals(1, tokens.get(18).word.length());
		assertEquals(1, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("27", tokens.get(19).word);
		assertEquals(36, tokens.get(19).startOffset);
		assertEquals(38, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("日", tokens.get(20).word);
		assertEquals(38, tokens.get(20).startOffset);
		assertEquals(39, tokens.get(20).endOffset);
		assertEquals(1, tokens.get(20).word.length());
		assertEquals(1, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("，", tokens.get(21).word);
		assertEquals(39, tokens.get(21).startOffset);
		assertEquals(40, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("全国", tokens.get(22).word);
		assertEquals(40, tokens.get(22).startOffset);
		assertEquals(42, tokens.get(22).endOffset);
		assertEquals(2, tokens.get(22).word.length());
		assertEquals(2, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("国人", tokens.get(23).word);
		assertEquals(41, tokens.get(23).startOffset);
		assertEquals(43, tokens.get(23).endOffset);
		assertEquals(2, tokens.get(23).word.length());
		assertEquals(2, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals("人大", tokens.get(24).word);
		assertEquals(42, tokens.get(24).startOffset);
		assertEquals(44, tokens.get(24).endOffset);
		assertEquals(2, tokens.get(24).word.length());
		assertEquals(2, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("常委", tokens.get(25).word);
		assertEquals(44, tokens.get(25).startOffset);
		assertEquals(46, tokens.get(25).endOffset);
		assertEquals(2, tokens.get(25).word.length());
		assertEquals(2, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("委会", tokens.get(26).word);
		assertEquals(45, tokens.get(26).startOffset);
		assertEquals(47, tokens.get(26).endOffset);
		assertEquals(2, tokens.get(26).word.length());
		assertEquals(2, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("常委会", tokens.get(27).word);
		assertEquals(44, tokens.get(27).startOffset);
		assertEquals(47, tokens.get(27).endOffset);
		assertEquals(3, tokens.get(27).word.length());
		assertEquals(3, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals("全国人大常委会", tokens.get(28).word);
		assertEquals(40, tokens.get(28).startOffset);
		assertEquals(47, tokens.get(28).endOffset);
		assertEquals(7, tokens.get(28).word.length());
		assertEquals(7, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("第三", tokens.get(29).word);
		assertEquals(47, tokens.get(29).startOffset);
		assertEquals(49, tokens.get(29).endOffset);
		assertEquals(2, tokens.get(29).word.length());
		assertEquals(2, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals("三次", tokens.get(30).word);
		assertEquals(48, tokens.get(30).startOffset);
		assertEquals(50, tokens.get(30).endOffset);
		assertEquals(2, tokens.get(30).word.length());
		assertEquals(2, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals("第三次", tokens.get(31).word);
		assertEquals(47, tokens.get(31).startOffset);
		assertEquals(50, tokens.get(31).endOffset);
		assertEquals(3, tokens.get(31).word.length());
		assertEquals(3, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("审议", tokens.get(32).word);
		assertEquals(50, tokens.get(32).startOffset);
		assertEquals(52, tokens.get(32).endOffset);
		assertEquals(2, tokens.get(32).word.length());
		assertEquals(2, tokens.get(32).endOffset - tokens.get(32).startOffset);
		assertEquals("侵权", tokens.get(33).word);
		assertEquals(52, tokens.get(33).startOffset);
		assertEquals(54, tokens.get(33).endOffset);
		assertEquals(2, tokens.get(33).word.length());
		assertEquals(2, tokens.get(33).endOffset - tokens.get(33).startOffset);
		assertEquals("责任", tokens.get(34).word);
		assertEquals(54, tokens.get(34).startOffset);
		assertEquals(56, tokens.get(34).endOffset);
		assertEquals(2, tokens.get(34).word.length());
		assertEquals(2, tokens.get(34).endOffset - tokens.get(34).startOffset);
		assertEquals("责任法", tokens.get(35).word);
		assertEquals(54, tokens.get(35).startOffset);
		assertEquals(57, tokens.get(35).endOffset);
		assertEquals(3, tokens.get(35).word.length());
		assertEquals(3, tokens.get(35).endOffset - tokens.get(35).startOffset);
		assertEquals("草案", tokens.get(36).word);
		assertEquals(57, tokens.get(36).startOffset);
		assertEquals(59, tokens.get(36).endOffset);
		assertEquals(2, tokens.get(36).word.length());
		assertEquals(2, tokens.get(36).endOffset - tokens.get(36).startOffset);
		assertEquals("，", tokens.get(37).word);
		assertEquals(59, tokens.get(37).startOffset);
		assertEquals(60, tokens.get(37).endOffset);
		assertEquals(1, tokens.get(37).word.length());
		assertEquals(1, tokens.get(37).endOffset - tokens.get(37).startOffset);
		assertEquals("删除", tokens.get(38).word);
		assertEquals(60, tokens.get(38).startOffset);
		assertEquals(62, tokens.get(38).endOffset);
		assertEquals(2, tokens.get(38).word.length());
		assertEquals(2, tokens.get(38).endOffset - tokens.get(38).startOffset);
		assertEquals("了", tokens.get(39).word);
		assertEquals(62, tokens.get(39).startOffset);
		assertEquals(63, tokens.get(39).endOffset);
		assertEquals(1, tokens.get(39).word.length());
		assertEquals(1, tokens.get(39).endOffset - tokens.get(39).startOffset);
		assertEquals("有关", tokens.get(40).word);
		assertEquals(63, tokens.get(40).startOffset);
		assertEquals(65, tokens.get(40).endOffset);
		assertEquals(2, tokens.get(40).word.length());
		assertEquals(2, tokens.get(40).endOffset - tokens.get(40).startOffset);
		assertEquals("医疗", tokens.get(41).word);
		assertEquals(65, tokens.get(41).startOffset);
		assertEquals(67, tokens.get(41).endOffset);
		assertEquals(2, tokens.get(41).word.length());
		assertEquals(2, tokens.get(41).endOffset - tokens.get(41).startOffset);
		assertEquals("损害", tokens.get(42).word);
		assertEquals(67, tokens.get(42).startOffset);
		assertEquals(69, tokens.get(42).endOffset);
		assertEquals(2, tokens.get(42).word.length());
		assertEquals(2, tokens.get(42).endOffset - tokens.get(42).startOffset);
		assertEquals("责任", tokens.get(43).word);
		assertEquals(69, tokens.get(43).startOffset);
		assertEquals(71, tokens.get(43).endOffset);
		assertEquals(2, tokens.get(43).word.length());
		assertEquals(2, tokens.get(43).endOffset - tokens.get(43).startOffset);
		assertEquals("“", tokens.get(44).word);
		assertEquals(71, tokens.get(44).startOffset);
		assertEquals(72, tokens.get(44).endOffset);
		assertEquals(1, tokens.get(44).word.length());
		assertEquals(1, tokens.get(44).endOffset - tokens.get(44).startOffset);
		assertEquals("举证", tokens.get(45).word);
		assertEquals(72, tokens.get(45).startOffset);
		assertEquals(74, tokens.get(45).endOffset);
		assertEquals(2, tokens.get(45).word.length());
		assertEquals(2, tokens.get(45).endOffset - tokens.get(45).startOffset);
		assertEquals("倒置", tokens.get(46).word);
		assertEquals(74, tokens.get(46).startOffset);
		assertEquals(76, tokens.get(46).endOffset);
		assertEquals(2, tokens.get(46).word.length());
		assertEquals(2, tokens.get(46).endOffset - tokens.get(46).startOffset);
		assertEquals("”", tokens.get(47).word);
		assertEquals(76, tokens.get(47).startOffset);
		assertEquals(77, tokens.get(47).endOffset);
		assertEquals(1, tokens.get(47).word.length());
		assertEquals(1, tokens.get(47).endOffset - tokens.get(47).startOffset);
		assertEquals("的", tokens.get(48).word);
		assertEquals(77, tokens.get(48).startOffset);
		assertEquals(78, tokens.get(48).endOffset);
		assertEquals(1, tokens.get(48).word.length());
		assertEquals(1, tokens.get(48).endOffset - tokens.get(48).startOffset);
		assertEquals("规定", tokens.get(49).word);
		assertEquals(78, tokens.get(49).startOffset);
		assertEquals(80, tokens.get(49).endOffset);
		assertEquals(2, tokens.get(49).word.length());
		assertEquals(2, tokens.get(49).endOffset - tokens.get(49).startOffset);
		assertEquals("。", tokens.get(50).word);
		assertEquals(80, tokens.get(50).startOffset);
		assertEquals(81, tokens.get(50).endOffset);
		assertEquals(1, tokens.get(50).word.length());
		assertEquals(1, tokens.get(50).endOffset - tokens.get(50).startOffset);
		assertEquals("在", tokens.get(51).word);
		assertEquals(81, tokens.get(51).startOffset);
		assertEquals(82, tokens.get(51).endOffset);
		assertEquals(1, tokens.get(51).word.length());
		assertEquals(1, tokens.get(51).endOffset - tokens.get(51).startOffset);
		assertEquals("医患", tokens.get(52).word);
		assertEquals(82, tokens.get(52).startOffset);
		assertEquals(84, tokens.get(52).endOffset);
		assertEquals(2, tokens.get(52).word.length());
		assertEquals(2, tokens.get(52).endOffset - tokens.get(52).startOffset);
		assertEquals("纠纷", tokens.get(53).word);
		assertEquals(84, tokens.get(53).startOffset);
		assertEquals(86, tokens.get(53).endOffset);
		assertEquals(2, tokens.get(53).word.length());
		assertEquals(2, tokens.get(53).endOffset - tokens.get(53).startOffset);
		assertEquals("中本", tokens.get(54).word);
		assertEquals(86, tokens.get(54).startOffset);
		assertEquals(88, tokens.get(54).endOffset);
		assertEquals(2, tokens.get(54).word.length());
		assertEquals(2, tokens.get(54).endOffset - tokens.get(54).startOffset);
		assertEquals("已", tokens.get(55).word);
		assertEquals(88, tokens.get(55).startOffset);
		assertEquals(89, tokens.get(55).endOffset);
		assertEquals(1, tokens.get(55).word.length());
		assertEquals(1, tokens.get(55).endOffset - tokens.get(55).startOffset);
		assertEquals("处于", tokens.get(56).word);
		assertEquals(89, tokens.get(56).startOffset);
		assertEquals(91, tokens.get(56).endOffset);
		assertEquals(2, tokens.get(56).word.length());
		assertEquals(2, tokens.get(56).endOffset - tokens.get(56).startOffset);
		assertEquals("弱势", tokens.get(57).word);
		assertEquals(91, tokens.get(57).startOffset);
		assertEquals(93, tokens.get(57).endOffset);
		assertEquals(2, tokens.get(57).word.length());
		assertEquals(2, tokens.get(57).endOffset - tokens.get(57).startOffset);
		assertEquals("地位", tokens.get(58).word);
		assertEquals(93, tokens.get(58).startOffset);
		assertEquals(95, tokens.get(58).endOffset);
		assertEquals(2, tokens.get(58).word.length());
		assertEquals(2, tokens.get(58).endOffset - tokens.get(58).startOffset);
		assertEquals("的", tokens.get(59).word);
		assertEquals(95, tokens.get(59).startOffset);
		assertEquals(96, tokens.get(59).endOffset);
		assertEquals(1, tokens.get(59).word.length());
		assertEquals(1, tokens.get(59).endOffset - tokens.get(59).startOffset);
		assertEquals("消费", tokens.get(60).word);
		assertEquals(96, tokens.get(60).startOffset);
		assertEquals(98, tokens.get(60).endOffset);
		assertEquals(2, tokens.get(60).word.length());
		assertEquals(2, tokens.get(60).endOffset - tokens.get(60).startOffset);
		assertEquals("消费者", tokens.get(61).word);
		assertEquals(96, tokens.get(61).startOffset);
		assertEquals(99, tokens.get(61).endOffset);
		assertEquals(3, tokens.get(61).word.length());
		assertEquals(3, tokens.get(61).endOffset - tokens.get(61).startOffset);
		assertEquals("由此", tokens.get(62).word);
		assertEquals(99, tokens.get(62).startOffset);
		assertEquals(101, tokens.get(62).endOffset);
		assertEquals(2, tokens.get(62).word.length());
		assertEquals(2, tokens.get(62).endOffset - tokens.get(62).startOffset);
		assertEquals("将", tokens.get(63).word);
		assertEquals(101, tokens.get(63).startOffset);
		assertEquals(102, tokens.get(63).endOffset);
		assertEquals(1, tokens.get(63).word.length());
		assertEquals(1, tokens.get(63).endOffset - tokens.get(63).startOffset);
		assertEquals("陷入", tokens.get(64).word);
		assertEquals(102, tokens.get(64).startOffset);
		assertEquals(104, tokens.get(64).endOffset);
		assertEquals(2, tokens.get(64).word.length());
		assertEquals(2, tokens.get(64).endOffset - tokens.get(64).startOffset);
		assertEquals("不复", tokens.get(65).word);
		assertEquals(106, tokens.get(65).startOffset);
		assertEquals(108, tokens.get(65).endOffset);
		assertEquals(2, tokens.get(65).word.length());
		assertEquals(2, tokens.get(65).endOffset - tokens.get(65).startOffset);
		assertEquals("万劫不复", tokens.get(66).word);
		assertEquals(104, tokens.get(66).startOffset);
		assertEquals(108, tokens.get(66).endOffset);
		assertEquals(4, tokens.get(66).word.length());
		assertEquals(4, tokens.get(66).endOffset - tokens.get(66).startOffset);
		assertEquals("的", tokens.get(67).word);
		assertEquals(108, tokens.get(67).startOffset);
		assertEquals(109, tokens.get(67).endOffset);
		assertEquals(1, tokens.get(67).word.length());
		assertEquals(1, tokens.get(67).endOffset - tokens.get(67).startOffset);
		assertEquals("境地", tokens.get(68).word);
		assertEquals(109, tokens.get(68).startOffset);
		assertEquals(111, tokens.get(68).endOffset);
		assertEquals(2, tokens.get(68).word.length());
		assertEquals(2, tokens.get(68).endOffset - tokens.get(68).startOffset);
		assertEquals("。", tokens.get(69).word);
		assertEquals(111, tokens.get(69).startOffset);
		assertEquals(112, tokens.get(69).endOffset);
		assertEquals(1, tokens.get(69).word.length());
		assertEquals(1, tokens.get(69).endOffset - tokens.get(69).startOffset);
		assertEquals(" ", tokens.get(70).word);
		assertEquals(112, tokens.get(70).startOffset);
		assertEquals(113, tokens.get(70).endOffset);
		assertEquals(1, tokens.get(70).word.length());
		assertEquals(1, tokens.get(70).endOffset - tokens.get(70).startOffset);
	}

	@Test
	public void testCase147() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("大", SegMode.INDEX);
		assertEquals("大", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase149() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("他说的确实在理", SegMode.INDEX);
		assertEquals("他", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("说", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("确实", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("在理", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase150() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("长春市长春节讲话", SegMode.INDEX);
		assertEquals("长春", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("市长", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("春节", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("讲话", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase151() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("结婚的和尚未结婚的", SegMode.INDEX);
		assertEquals("结婚", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("的", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("和", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("尚未", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("结婚", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("的", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase152() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("结合成分子时", SegMode.INDEX);
		assertEquals("结合", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("成", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("分子", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("时", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase153() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("旅游和服务是最好的", SegMode.INDEX);
		assertEquals("旅游", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("和", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("服务", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("是", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("最好", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("的", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase154() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("这件事情的确是我的错", SegMode.INDEX);
		assertEquals("这件", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("事情", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("的确", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("是", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("我", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("的", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("错", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
	}

	@Test
	public void testCase155() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("供大家参考指正", SegMode.INDEX);
		assertEquals("供", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("大家", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("参考", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("指正", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase156() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("哈尔滨政府公布塌桥原因", SegMode.INDEX);
		assertEquals("哈尔", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("哈尔滨", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("政府", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("公布", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("塌桥", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("原因", tokens.get(5).word);
		assertEquals(9, tokens.get(5).startOffset);
		assertEquals(11, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase157() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我在机场入口处", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("在", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("机场", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("入口", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("入口处", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(3, tokens.get(4).word.length());
		assertEquals(3, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase158() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("邢永臣摄影报道", SegMode.INDEX);
		assertEquals("邢永臣", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("摄影", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("报道", tokens.get(2).word);
		assertEquals(5, tokens.get(2).startOffset);
		assertEquals(7, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase159() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("BP神经网络如何训练才能在分类时增加区分度？", SegMode.INDEX);
		assertEquals("bp", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("神经", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("网络", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("神经网", tokens.get(3).word);
		assertEquals(2, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(3, tokens.get(3).word.length());
		assertEquals(3, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("神经网络", tokens.get(4).word);
		assertEquals(2, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(4, tokens.get(4).word.length());
		assertEquals(4, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("如何", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("训练", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(10, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("才能", tokens.get(7).word);
		assertEquals(10, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("在", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("分类", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(2, tokens.get(9).word.length());
		assertEquals(2, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("时", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("增加", tokens.get(11).word);
		assertEquals(16, tokens.get(11).startOffset);
		assertEquals(18, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("区分", tokens.get(12).word);
		assertEquals(18, tokens.get(12).startOffset);
		assertEquals(20, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("分度", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(21, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("区分度", tokens.get(14).word);
		assertEquals(18, tokens.get(14).startOffset);
		assertEquals(21, tokens.get(14).endOffset);
		assertEquals(3, tokens.get(14).word.length());
		assertEquals(3, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("？", tokens.get(15).word);
		assertEquals(21, tokens.get(15).startOffset);
		assertEquals(22, tokens.get(15).endOffset);
		assertEquals(1, tokens.get(15).word.length());
		assertEquals(1, tokens.get(15).endOffset - tokens.get(15).startOffset);
	}

	@Test
	public void testCase160() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("南京市长江大桥", SegMode.INDEX);
		assertEquals("南京", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("京市", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("南京市", tokens.get(2).word);
		assertEquals(0, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("长江", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("大桥", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("长江大桥", tokens.get(5).word);
		assertEquals(3, tokens.get(5).startOffset);
		assertEquals(7, tokens.get(5).endOffset);
		assertEquals(4, tokens.get(5).word.length());
		assertEquals(4, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase161() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("应一些使用者的建议，也为了便于利用NiuTrans用于SMT研究", SegMode.INDEX);
		assertEquals("应", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("一些", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("使用", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("用者", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("使用者", tokens.get(4).word);
		assertEquals(3, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(3, tokens.get(4).word.length());
		assertEquals(3, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("的", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(7, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("建议", tokens.get(6).word);
		assertEquals(7, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("，", tokens.get(7).word);
		assertEquals(9, tokens.get(7).startOffset);
		assertEquals(10, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("也", tokens.get(8).word);
		assertEquals(10, tokens.get(8).startOffset);
		assertEquals(11, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("为了", tokens.get(9).word);
		assertEquals(11, tokens.get(9).startOffset);
		assertEquals(13, tokens.get(9).endOffset);
		assertEquals(2, tokens.get(9).word.length());
		assertEquals(2, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("便于", tokens.get(10).word);
		assertEquals(13, tokens.get(10).startOffset);
		assertEquals(15, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("利用", tokens.get(11).word);
		assertEquals(15, tokens.get(11).startOffset);
		assertEquals(17, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("niutrans", tokens.get(12).word);
		assertEquals(17, tokens.get(12).startOffset);
		assertEquals(25, tokens.get(12).endOffset);
		assertEquals(8, tokens.get(12).word.length());
		assertEquals(8, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("用于", tokens.get(13).word);
		assertEquals(25, tokens.get(13).startOffset);
		assertEquals(27, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("smt", tokens.get(14).word);
		assertEquals(27, tokens.get(14).startOffset);
		assertEquals(30, tokens.get(14).endOffset);
		assertEquals(3, tokens.get(14).word.length());
		assertEquals(3, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("研究", tokens.get(15).word);
		assertEquals(30, tokens.get(15).startOffset);
		assertEquals(32, tokens.get(15).endOffset);
		assertEquals(2, tokens.get(15).word.length());
		assertEquals(2, tokens.get(15).endOffset - tokens.get(15).startOffset);
	}

	@Test
	public void testCase162() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("长春市长春药店", SegMode.INDEX);
		assertEquals("长春", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("长春市", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("长春", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("药店", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase163() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("邓颖超生前最喜欢的衣服", SegMode.INDEX);
		assertEquals("邓颖超", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("生前", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("最", tokens.get(2).word);
		assertEquals(5, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("喜欢", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(8, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("衣服", tokens.get(5).word);
		assertEquals(9, tokens.get(5).startOffset);
		assertEquals(11, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
	}

	@Test
	public void testCase164() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("胡锦涛是热爱世界和平的政治局常委", SegMode.INDEX);
		assertEquals("锦涛", tokens.get(0).word);
		assertEquals(1, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("胡锦涛", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("是", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("热爱", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("世界", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("和平", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("政治", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("政治局", tokens.get(8).word);
		assertEquals(11, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(3, tokens.get(8).word.length());
		assertEquals(3, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("常委", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(16, tokens.get(9).endOffset);
		assertEquals(2, tokens.get(9).word.length());
		assertEquals(2, tokens.get(9).endOffset - tokens.get(9).startOffset);
	}

	@Test
	public void testCase165() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("程序员祝海林和朱会震是在孙健的左面和右面, 范凯在最右面.再往左是李松洪", SegMode.INDEX);
		assertEquals("程序", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("程序员", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("祝", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("海林", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("和", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("朱会震", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(3, tokens.get(5).word.length());
		assertEquals(3, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("是", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("在", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("孙健", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("的", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("左面", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(17, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("和", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(18, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("右面", tokens.get(12).word);
		assertEquals(18, tokens.get(12).startOffset);
		assertEquals(20, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals(",", tokens.get(13).word);
		assertEquals(20, tokens.get(13).startOffset);
		assertEquals(21, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals(" ", tokens.get(14).word);
		assertEquals(21, tokens.get(14).startOffset);
		assertEquals(22, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("范凯", tokens.get(15).word);
		assertEquals(22, tokens.get(15).startOffset);
		assertEquals(24, tokens.get(15).endOffset);
		assertEquals(2, tokens.get(15).word.length());
		assertEquals(2, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("在", tokens.get(16).word);
		assertEquals(24, tokens.get(16).startOffset);
		assertEquals(25, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("最", tokens.get(17).word);
		assertEquals(25, tokens.get(17).startOffset);
		assertEquals(26, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("右面", tokens.get(18).word);
		assertEquals(26, tokens.get(18).startOffset);
		assertEquals(28, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals(".", tokens.get(19).word);
		assertEquals(28, tokens.get(19).startOffset);
		assertEquals(29, tokens.get(19).endOffset);
		assertEquals(1, tokens.get(19).word.length());
		assertEquals(1, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("再往", tokens.get(20).word);
		assertEquals(29, tokens.get(20).startOffset);
		assertEquals(31, tokens.get(20).endOffset);
		assertEquals(2, tokens.get(20).word.length());
		assertEquals(2, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("左", tokens.get(21).word);
		assertEquals(31, tokens.get(21).startOffset);
		assertEquals(32, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("是", tokens.get(22).word);
		assertEquals(32, tokens.get(22).startOffset);
		assertEquals(33, tokens.get(22).endOffset);
		assertEquals(1, tokens.get(22).word.length());
		assertEquals(1, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("李松洪", tokens.get(23).word);
		assertEquals(33, tokens.get(23).startOffset);
		assertEquals(36, tokens.get(23).endOffset);
		assertEquals(3, tokens.get(23).word.length());
		assertEquals(3, tokens.get(23).endOffset - tokens.get(23).startOffset);
	}

	@Test
	public void testCase166() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("一次性交多少钱", SegMode.INDEX);
		assertEquals("一次", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("一次性", tokens.get(1).word);
		assertEquals(0, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(3, tokens.get(1).word.length());
		assertEquals(3, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("交", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("多少", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("钱", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase167() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("两块五一套，三块八一斤，四块七一本，五块六一条", SegMode.INDEX);
		assertEquals("两块", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("五", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("一套", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("，", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("三块", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("八", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("一斤", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("，", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("四块", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("七", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("一本", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(17, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("，", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(18, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("五块", tokens.get(12).word);
		assertEquals(18, tokens.get(12).startOffset);
		assertEquals(20, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("六", tokens.get(13).word);
		assertEquals(20, tokens.get(13).startOffset);
		assertEquals(21, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("一条", tokens.get(14).word);
		assertEquals(21, tokens.get(14).startOffset);
		assertEquals(23, tokens.get(14).endOffset);
		assertEquals(2, tokens.get(14).word.length());
		assertEquals(2, tokens.get(14).endOffset - tokens.get(14).startOffset);
	}

	@Test
	public void testCase168() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("小和尚留了一个像大和尚一样的和尚头", SegMode.INDEX);
		assertEquals("小", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("和尚", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("留", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("了", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("一个", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("像", tokens.get(5).word);
		assertEquals(7, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("大", tokens.get(6).word);
		assertEquals(8, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("和尚", tokens.get(7).word);
		assertEquals(9, tokens.get(7).startOffset);
		assertEquals(11, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("一样", tokens.get(8).word);
		assertEquals(11, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("的", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(14, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("和尚", tokens.get(10).word);
		assertEquals(14, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("和尚头", tokens.get(11).word);
		assertEquals(14, tokens.get(11).startOffset);
		assertEquals(17, tokens.get(11).endOffset);
		assertEquals(3, tokens.get(11).word.length());
		assertEquals(3, tokens.get(11).endOffset - tokens.get(11).startOffset);
	}

	@Test
	public void testCase169() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("我是中华人民共和国公民;我爸爸是共和党党员; 地铁和平门站", SegMode.INDEX);
		assertEquals("我", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("是", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(2, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("中华", tokens.get(2).word);
		assertEquals(2, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("华人", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("人民", tokens.get(4).word);
		assertEquals(4, tokens.get(4).startOffset);
		assertEquals(6, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("共和", tokens.get(5).word);
		assertEquals(6, tokens.get(5).startOffset);
		assertEquals(8, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("共和国", tokens.get(6).word);
		assertEquals(6, tokens.get(6).startOffset);
		assertEquals(9, tokens.get(6).endOffset);
		assertEquals(3, tokens.get(6).word.length());
		assertEquals(3, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("中华人民共和国", tokens.get(7).word);
		assertEquals(2, tokens.get(7).startOffset);
		assertEquals(9, tokens.get(7).endOffset);
		assertEquals(7, tokens.get(7).word.length());
		assertEquals(7, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("公民", tokens.get(8).word);
		assertEquals(9, tokens.get(8).startOffset);
		assertEquals(11, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals(";", tokens.get(9).word);
		assertEquals(11, tokens.get(9).startOffset);
		assertEquals(12, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("我", tokens.get(10).word);
		assertEquals(12, tokens.get(10).startOffset);
		assertEquals(13, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("爸爸", tokens.get(11).word);
		assertEquals(13, tokens.get(11).startOffset);
		assertEquals(15, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("是", tokens.get(12).word);
		assertEquals(15, tokens.get(12).startOffset);
		assertEquals(16, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("共和", tokens.get(13).word);
		assertEquals(16, tokens.get(13).startOffset);
		assertEquals(18, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("共和党", tokens.get(14).word);
		assertEquals(16, tokens.get(14).startOffset);
		assertEquals(19, tokens.get(14).endOffset);
		assertEquals(3, tokens.get(14).word.length());
		assertEquals(3, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("党员", tokens.get(15).word);
		assertEquals(19, tokens.get(15).startOffset);
		assertEquals(21, tokens.get(15).endOffset);
		assertEquals(2, tokens.get(15).word.length());
		assertEquals(2, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals(";", tokens.get(16).word);
		assertEquals(21, tokens.get(16).startOffset);
		assertEquals(22, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals(" ", tokens.get(17).word);
		assertEquals(22, tokens.get(17).startOffset);
		assertEquals(23, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("地铁", tokens.get(18).word);
		assertEquals(23, tokens.get(18).startOffset);
		assertEquals(25, tokens.get(18).endOffset);
		assertEquals(2, tokens.get(18).word.length());
		assertEquals(2, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("和平", tokens.get(19).word);
		assertEquals(25, tokens.get(19).startOffset);
		assertEquals(27, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("和平门", tokens.get(20).word);
		assertEquals(25, tokens.get(20).startOffset);
		assertEquals(28, tokens.get(20).endOffset);
		assertEquals(3, tokens.get(20).word.length());
		assertEquals(3, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("站", tokens.get(21).word);
		assertEquals(28, tokens.get(21).startOffset);
		assertEquals(29, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
	}

	@Test
	public void testCase170() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("张晓梅去人民医院做了个B超然后去买了件T恤", SegMode.INDEX);
		assertEquals("张晓梅", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("去", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("人民", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("医院", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(8, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("做", tokens.get(4).word);
		assertEquals(8, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("了", tokens.get(5).word);
		assertEquals(9, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("个", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("b超", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("然后", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(2, tokens.get(8).word.length());
		assertEquals(2, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("去", tokens.get(9).word);
		assertEquals(15, tokens.get(9).startOffset);
		assertEquals(16, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("买", tokens.get(10).word);
		assertEquals(16, tokens.get(10).startOffset);
		assertEquals(17, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("了", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(18, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("件", tokens.get(12).word);
		assertEquals(18, tokens.get(12).startOffset);
		assertEquals(19, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("t恤", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(21, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
	}

	@Test
	public void testCase171() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("AT&T是一件不错的公司，给你发offer了吗？", SegMode.INDEX);
		assertEquals("at&t", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(4, tokens.get(0).endOffset);
		assertEquals(4, tokens.get(0).word.length());
		assertEquals(4, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("是", tokens.get(1).word);
		assertEquals(4, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("一件", tokens.get(2).word);
		assertEquals(5, tokens.get(2).startOffset);
		assertEquals(7, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("不错", tokens.get(3).word);
		assertEquals(7, tokens.get(3).startOffset);
		assertEquals(9, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(9, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("公司", tokens.get(5).word);
		assertEquals(10, tokens.get(5).startOffset);
		assertEquals(12, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("，", tokens.get(6).word);
		assertEquals(12, tokens.get(6).startOffset);
		assertEquals(13, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("给", tokens.get(7).word);
		assertEquals(13, tokens.get(7).startOffset);
		assertEquals(14, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("你", tokens.get(8).word);
		assertEquals(14, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("发", tokens.get(9).word);
		assertEquals(15, tokens.get(9).startOffset);
		assertEquals(16, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("offer", tokens.get(10).word);
		assertEquals(16, tokens.get(10).startOffset);
		assertEquals(21, tokens.get(10).endOffset);
		assertEquals(5, tokens.get(10).word.length());
		assertEquals(5, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("了", tokens.get(11).word);
		assertEquals(21, tokens.get(11).startOffset);
		assertEquals(22, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("吗", tokens.get(12).word);
		assertEquals(22, tokens.get(12).startOffset);
		assertEquals(23, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("？", tokens.get(13).word);
		assertEquals(23, tokens.get(13).startOffset);
		assertEquals(24, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
	}

	@Test
	public void testCase172() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("C++和c#是什么关系？11+122=133，是吗？PI=3.14159", SegMode.INDEX);
		assertEquals("c++", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("和", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("c#", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(6, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("是", tokens.get(3).word);
		assertEquals(6, tokens.get(3).startOffset);
		assertEquals(7, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("什么", tokens.get(4).word);
		assertEquals(7, tokens.get(4).startOffset);
		assertEquals(9, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("关系", tokens.get(5).word);
		assertEquals(9, tokens.get(5).startOffset);
		assertEquals(11, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("？", tokens.get(6).word);
		assertEquals(11, tokens.get(6).startOffset);
		assertEquals(12, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("11", tokens.get(7).word);
		assertEquals(12, tokens.get(7).startOffset);
		assertEquals(14, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("+", tokens.get(8).word);
		assertEquals(14, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("122", tokens.get(9).word);
		assertEquals(15, tokens.get(9).startOffset);
		assertEquals(18, tokens.get(9).endOffset);
		assertEquals(3, tokens.get(9).word.length());
		assertEquals(3, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("=", tokens.get(10).word);
		assertEquals(18, tokens.get(10).startOffset);
		assertEquals(19, tokens.get(10).endOffset);
		assertEquals(1, tokens.get(10).word.length());
		assertEquals(1, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("133", tokens.get(11).word);
		assertEquals(19, tokens.get(11).startOffset);
		assertEquals(22, tokens.get(11).endOffset);
		assertEquals(3, tokens.get(11).word.length());
		assertEquals(3, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("，", tokens.get(12).word);
		assertEquals(22, tokens.get(12).startOffset);
		assertEquals(23, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("是", tokens.get(13).word);
		assertEquals(23, tokens.get(13).startOffset);
		assertEquals(24, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("吗", tokens.get(14).word);
		assertEquals(24, tokens.get(14).startOffset);
		assertEquals(25, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("？", tokens.get(15).word);
		assertEquals(25, tokens.get(15).startOffset);
		assertEquals(26, tokens.get(15).endOffset);
		assertEquals(1, tokens.get(15).word.length());
		assertEquals(1, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals("pi", tokens.get(16).word);
		assertEquals(26, tokens.get(16).startOffset);
		assertEquals(28, tokens.get(16).endOffset);
		assertEquals(2, tokens.get(16).word.length());
		assertEquals(2, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals("=", tokens.get(17).word);
		assertEquals(28, tokens.get(17).startOffset);
		assertEquals(29, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals("3.14159", tokens.get(18).word);
		assertEquals(29, tokens.get(18).startOffset);
		assertEquals(36, tokens.get(18).endOffset);
		assertEquals(7, tokens.get(18).word.length());
		assertEquals(7, tokens.get(18).endOffset - tokens.get(18).startOffset);
	}

	@Test
	public void testCase173() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("你认识那个和主席握手的的哥吗？他开一辆黑色的士。", SegMode.INDEX);
		assertEquals("你", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(1, tokens.get(0).endOffset);
		assertEquals(1, tokens.get(0).word.length());
		assertEquals(1, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("认识", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("那个", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("和", tokens.get(3).word);
		assertEquals(5, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("主席", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("握手", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(10, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("的", tokens.get(6).word);
		assertEquals(10, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("的哥", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(13, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("吗", tokens.get(8).word);
		assertEquals(13, tokens.get(8).startOffset);
		assertEquals(14, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("？", tokens.get(9).word);
		assertEquals(14, tokens.get(9).startOffset);
		assertEquals(15, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("他开", tokens.get(10).word);
		assertEquals(15, tokens.get(10).startOffset);
		assertEquals(17, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("一辆", tokens.get(11).word);
		assertEquals(17, tokens.get(11).startOffset);
		assertEquals(19, tokens.get(11).endOffset);
		assertEquals(2, tokens.get(11).word.length());
		assertEquals(2, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("黑色", tokens.get(12).word);
		assertEquals(19, tokens.get(12).startOffset);
		assertEquals(21, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("的士", tokens.get(13).word);
		assertEquals(21, tokens.get(13).startOffset);
		assertEquals(23, tokens.get(13).endOffset);
		assertEquals(2, tokens.get(13).word.length());
		assertEquals(2, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("。", tokens.get(14).word);
		assertEquals(23, tokens.get(14).startOffset);
		assertEquals(24, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
	}

	@Test
	public void testCase174() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("枪杆子中出政权", SegMode.INDEX);
		assertEquals("枪杆", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("杆子", tokens.get(1).word);
		assertEquals(1, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(2, tokens.get(1).word.length());
		assertEquals(2, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("枪杆子", tokens.get(2).word);
		assertEquals(0, tokens.get(2).startOffset);
		assertEquals(3, tokens.get(2).endOffset);
		assertEquals(3, tokens.get(2).word.length());
		assertEquals(3, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("中出", tokens.get(3).word);
		assertEquals(3, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("政权", tokens.get(4).word);
		assertEquals(5, tokens.get(4).startOffset);
		assertEquals(7, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
	}

	@Test
	public void testCase175() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("鲜芋仙 3", SegMode.INDEX);
		assertEquals("鲜芋", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("仙", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals(" ", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("3", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase176() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("UTF-8", SegMode.INDEX);
		assertEquals("utf", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(3, tokens.get(0).endOffset);
		assertEquals(3, tokens.get(0).word.length());
		assertEquals(3, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("-", tokens.get(1).word);
		assertEquals(3, tokens.get(1).startOffset);
		assertEquals(4, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("8", tokens.get(2).word);
		assertEquals(4, tokens.get(2).startOffset);
		assertEquals(5, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
	}

	@Test
	public void testCase177() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("iphone5", SegMode.INDEX);
		assertEquals("iphone5", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(7, tokens.get(0).endOffset);
		assertEquals(7, tokens.get(0).word.length());
		assertEquals(7, tokens.get(0).endOffset - tokens.get(0).startOffset);
	}

	@Test
	public void testCase178() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("鲜芋仙 3", SegMode.INDEX);
		assertEquals("鲜芋", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("仙", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals(" ", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("3", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(5, tokens.get(3).endOffset);
		assertEquals(1, tokens.get(3).word.length());
		assertEquals(1, tokens.get(3).endOffset - tokens.get(3).startOffset);
	}

	@Test
	public void testCase179() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("RT @laoshipukong : 27日，", SegMode.INDEX);
		assertEquals("rt", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals(" ", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("@", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("laoshipukong", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(16, tokens.get(3).endOffset);
		assertEquals(12, tokens.get(3).word.length());
		assertEquals(12, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals(" ", tokens.get(4).word);
		assertEquals(16, tokens.get(4).startOffset);
		assertEquals(17, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals(":", tokens.get(5).word);
		assertEquals(17, tokens.get(5).startOffset);
		assertEquals(18, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals(" ", tokens.get(6).word);
		assertEquals(18, tokens.get(6).startOffset);
		assertEquals(19, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("27", tokens.get(7).word);
		assertEquals(19, tokens.get(7).startOffset);
		assertEquals(21, tokens.get(7).endOffset);
		assertEquals(2, tokens.get(7).word.length());
		assertEquals(2, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("日", tokens.get(8).word);
		assertEquals(21, tokens.get(8).startOffset);
		assertEquals(22, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("，", tokens.get(9).word);
		assertEquals(22, tokens.get(9).startOffset);
		assertEquals(23, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
	}

	@Test
	public void testCase180() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process("AT&T是一件不错的公司，给你发offer了吗？", SegMode.INDEX);
		assertEquals("at&t", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(4, tokens.get(0).endOffset);
		assertEquals(4, tokens.get(0).word.length());
		assertEquals(4, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("是", tokens.get(1).word);
		assertEquals(4, tokens.get(1).startOffset);
		assertEquals(5, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("一件", tokens.get(2).word);
		assertEquals(5, tokens.get(2).startOffset);
		assertEquals(7, tokens.get(2).endOffset);
		assertEquals(2, tokens.get(2).word.length());
		assertEquals(2, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("不错", tokens.get(3).word);
		assertEquals(7, tokens.get(3).startOffset);
		assertEquals(9, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("的", tokens.get(4).word);
		assertEquals(9, tokens.get(4).startOffset);
		assertEquals(10, tokens.get(4).endOffset);
		assertEquals(1, tokens.get(4).word.length());
		assertEquals(1, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("公司", tokens.get(5).word);
		assertEquals(10, tokens.get(5).startOffset);
		assertEquals(12, tokens.get(5).endOffset);
		assertEquals(2, tokens.get(5).word.length());
		assertEquals(2, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("，", tokens.get(6).word);
		assertEquals(12, tokens.get(6).startOffset);
		assertEquals(13, tokens.get(6).endOffset);
		assertEquals(1, tokens.get(6).word.length());
		assertEquals(1, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("给", tokens.get(7).word);
		assertEquals(13, tokens.get(7).startOffset);
		assertEquals(14, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("你", tokens.get(8).word);
		assertEquals(14, tokens.get(8).startOffset);
		assertEquals(15, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("发", tokens.get(9).word);
		assertEquals(15, tokens.get(9).startOffset);
		assertEquals(16, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("offer", tokens.get(10).word);
		assertEquals(16, tokens.get(10).startOffset);
		assertEquals(21, tokens.get(10).endOffset);
		assertEquals(5, tokens.get(10).word.length());
		assertEquals(5, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("了", tokens.get(11).word);
		assertEquals(21, tokens.get(11).startOffset);
		assertEquals(22, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("吗", tokens.get(12).word);
		assertEquals(22, tokens.get(12).startOffset);
		assertEquals(23, tokens.get(12).endOffset);
		assertEquals(1, tokens.get(12).word.length());
		assertEquals(1, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals("？", tokens.get(13).word);
		assertEquals(23, tokens.get(13).startOffset);
		assertEquals(24, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
	}

	@Test
	public void testCase181() {
		JiebaSegmenter segmenter = new JiebaSegmenter();
		List<SegToken> tokens = new ArrayList<>();
		tokens = segmenter.process(
				"干脆就把那部蒙人的闲法给废了拉倒！RT @laoshipukong : 27日，全国人大常委会第三次审议侵权责任法草案，删除了有关医疗损害责任“举证倒置”的规定。在医患纠纷中本已处于弱势地位的消费者由此将陷入万劫不复的境地。 ",
				SegMode.INDEX);
		assertEquals("干脆", tokens.get(0).word);
		assertEquals(0, tokens.get(0).startOffset);
		assertEquals(2, tokens.get(0).endOffset);
		assertEquals(2, tokens.get(0).word.length());
		assertEquals(2, tokens.get(0).endOffset - tokens.get(0).startOffset);
		assertEquals("就", tokens.get(1).word);
		assertEquals(2, tokens.get(1).startOffset);
		assertEquals(3, tokens.get(1).endOffset);
		assertEquals(1, tokens.get(1).word.length());
		assertEquals(1, tokens.get(1).endOffset - tokens.get(1).startOffset);
		assertEquals("把", tokens.get(2).word);
		assertEquals(3, tokens.get(2).startOffset);
		assertEquals(4, tokens.get(2).endOffset);
		assertEquals(1, tokens.get(2).word.length());
		assertEquals(1, tokens.get(2).endOffset - tokens.get(2).startOffset);
		assertEquals("那部", tokens.get(3).word);
		assertEquals(4, tokens.get(3).startOffset);
		assertEquals(6, tokens.get(3).endOffset);
		assertEquals(2, tokens.get(3).word.length());
		assertEquals(2, tokens.get(3).endOffset - tokens.get(3).startOffset);
		assertEquals("蒙人", tokens.get(4).word);
		assertEquals(6, tokens.get(4).startOffset);
		assertEquals(8, tokens.get(4).endOffset);
		assertEquals(2, tokens.get(4).word.length());
		assertEquals(2, tokens.get(4).endOffset - tokens.get(4).startOffset);
		assertEquals("的", tokens.get(5).word);
		assertEquals(8, tokens.get(5).startOffset);
		assertEquals(9, tokens.get(5).endOffset);
		assertEquals(1, tokens.get(5).word.length());
		assertEquals(1, tokens.get(5).endOffset - tokens.get(5).startOffset);
		assertEquals("闲法", tokens.get(6).word);
		assertEquals(9, tokens.get(6).startOffset);
		assertEquals(11, tokens.get(6).endOffset);
		assertEquals(2, tokens.get(6).word.length());
		assertEquals(2, tokens.get(6).endOffset - tokens.get(6).startOffset);
		assertEquals("给", tokens.get(7).word);
		assertEquals(11, tokens.get(7).startOffset);
		assertEquals(12, tokens.get(7).endOffset);
		assertEquals(1, tokens.get(7).word.length());
		assertEquals(1, tokens.get(7).endOffset - tokens.get(7).startOffset);
		assertEquals("废", tokens.get(8).word);
		assertEquals(12, tokens.get(8).startOffset);
		assertEquals(13, tokens.get(8).endOffset);
		assertEquals(1, tokens.get(8).word.length());
		assertEquals(1, tokens.get(8).endOffset - tokens.get(8).startOffset);
		assertEquals("了", tokens.get(9).word);
		assertEquals(13, tokens.get(9).startOffset);
		assertEquals(14, tokens.get(9).endOffset);
		assertEquals(1, tokens.get(9).word.length());
		assertEquals(1, tokens.get(9).endOffset - tokens.get(9).startOffset);
		assertEquals("拉倒", tokens.get(10).word);
		assertEquals(14, tokens.get(10).startOffset);
		assertEquals(16, tokens.get(10).endOffset);
		assertEquals(2, tokens.get(10).word.length());
		assertEquals(2, tokens.get(10).endOffset - tokens.get(10).startOffset);
		assertEquals("！", tokens.get(11).word);
		assertEquals(16, tokens.get(11).startOffset);
		assertEquals(17, tokens.get(11).endOffset);
		assertEquals(1, tokens.get(11).word.length());
		assertEquals(1, tokens.get(11).endOffset - tokens.get(11).startOffset);
		assertEquals("rt", tokens.get(12).word);
		assertEquals(17, tokens.get(12).startOffset);
		assertEquals(19, tokens.get(12).endOffset);
		assertEquals(2, tokens.get(12).word.length());
		assertEquals(2, tokens.get(12).endOffset - tokens.get(12).startOffset);
		assertEquals(" ", tokens.get(13).word);
		assertEquals(19, tokens.get(13).startOffset);
		assertEquals(20, tokens.get(13).endOffset);
		assertEquals(1, tokens.get(13).word.length());
		assertEquals(1, tokens.get(13).endOffset - tokens.get(13).startOffset);
		assertEquals("@", tokens.get(14).word);
		assertEquals(20, tokens.get(14).startOffset);
		assertEquals(21, tokens.get(14).endOffset);
		assertEquals(1, tokens.get(14).word.length());
		assertEquals(1, tokens.get(14).endOffset - tokens.get(14).startOffset);
		assertEquals("laoshipukong", tokens.get(15).word);
		assertEquals(21, tokens.get(15).startOffset);
		assertEquals(33, tokens.get(15).endOffset);
		assertEquals(12, tokens.get(15).word.length());
		assertEquals(12, tokens.get(15).endOffset - tokens.get(15).startOffset);
		assertEquals(" ", tokens.get(16).word);
		assertEquals(33, tokens.get(16).startOffset);
		assertEquals(34, tokens.get(16).endOffset);
		assertEquals(1, tokens.get(16).word.length());
		assertEquals(1, tokens.get(16).endOffset - tokens.get(16).startOffset);
		assertEquals(":", tokens.get(17).word);
		assertEquals(34, tokens.get(17).startOffset);
		assertEquals(35, tokens.get(17).endOffset);
		assertEquals(1, tokens.get(17).word.length());
		assertEquals(1, tokens.get(17).endOffset - tokens.get(17).startOffset);
		assertEquals(" ", tokens.get(18).word);
		assertEquals(35, tokens.get(18).startOffset);
		assertEquals(36, tokens.get(18).endOffset);
		assertEquals(1, tokens.get(18).word.length());
		assertEquals(1, tokens.get(18).endOffset - tokens.get(18).startOffset);
		assertEquals("27", tokens.get(19).word);
		assertEquals(36, tokens.get(19).startOffset);
		assertEquals(38, tokens.get(19).endOffset);
		assertEquals(2, tokens.get(19).word.length());
		assertEquals(2, tokens.get(19).endOffset - tokens.get(19).startOffset);
		assertEquals("日", tokens.get(20).word);
		assertEquals(38, tokens.get(20).startOffset);
		assertEquals(39, tokens.get(20).endOffset);
		assertEquals(1, tokens.get(20).word.length());
		assertEquals(1, tokens.get(20).endOffset - tokens.get(20).startOffset);
		assertEquals("，", tokens.get(21).word);
		assertEquals(39, tokens.get(21).startOffset);
		assertEquals(40, tokens.get(21).endOffset);
		assertEquals(1, tokens.get(21).word.length());
		assertEquals(1, tokens.get(21).endOffset - tokens.get(21).startOffset);
		assertEquals("全国", tokens.get(22).word);
		assertEquals(40, tokens.get(22).startOffset);
		assertEquals(42, tokens.get(22).endOffset);
		assertEquals(2, tokens.get(22).word.length());
		assertEquals(2, tokens.get(22).endOffset - tokens.get(22).startOffset);
		assertEquals("国人", tokens.get(23).word);
		assertEquals(41, tokens.get(23).startOffset);
		assertEquals(43, tokens.get(23).endOffset);
		assertEquals(2, tokens.get(23).word.length());
		assertEquals(2, tokens.get(23).endOffset - tokens.get(23).startOffset);
		assertEquals("人大", tokens.get(24).word);
		assertEquals(42, tokens.get(24).startOffset);
		assertEquals(44, tokens.get(24).endOffset);
		assertEquals(2, tokens.get(24).word.length());
		assertEquals(2, tokens.get(24).endOffset - tokens.get(24).startOffset);
		assertEquals("常委", tokens.get(25).word);
		assertEquals(44, tokens.get(25).startOffset);
		assertEquals(46, tokens.get(25).endOffset);
		assertEquals(2, tokens.get(25).word.length());
		assertEquals(2, tokens.get(25).endOffset - tokens.get(25).startOffset);
		assertEquals("委会", tokens.get(26).word);
		assertEquals(45, tokens.get(26).startOffset);
		assertEquals(47, tokens.get(26).endOffset);
		assertEquals(2, tokens.get(26).word.length());
		assertEquals(2, tokens.get(26).endOffset - tokens.get(26).startOffset);
		assertEquals("常委会", tokens.get(27).word);
		assertEquals(44, tokens.get(27).startOffset);
		assertEquals(47, tokens.get(27).endOffset);
		assertEquals(3, tokens.get(27).word.length());
		assertEquals(3, tokens.get(27).endOffset - tokens.get(27).startOffset);
		assertEquals("全国人大常委会", tokens.get(28).word);
		assertEquals(40, tokens.get(28).startOffset);
		assertEquals(47, tokens.get(28).endOffset);
		assertEquals(7, tokens.get(28).word.length());
		assertEquals(7, tokens.get(28).endOffset - tokens.get(28).startOffset);
		assertEquals("第三", tokens.get(29).word);
		assertEquals(47, tokens.get(29).startOffset);
		assertEquals(49, tokens.get(29).endOffset);
		assertEquals(2, tokens.get(29).word.length());
		assertEquals(2, tokens.get(29).endOffset - tokens.get(29).startOffset);
		assertEquals("三次", tokens.get(30).word);
		assertEquals(48, tokens.get(30).startOffset);
		assertEquals(50, tokens.get(30).endOffset);
		assertEquals(2, tokens.get(30).word.length());
		assertEquals(2, tokens.get(30).endOffset - tokens.get(30).startOffset);
		assertEquals("第三次", tokens.get(31).word);
		assertEquals(47, tokens.get(31).startOffset);
		assertEquals(50, tokens.get(31).endOffset);
		assertEquals(3, tokens.get(31).word.length());
		assertEquals(3, tokens.get(31).endOffset - tokens.get(31).startOffset);
		assertEquals("审议", tokens.get(32).word);
		assertEquals(50, tokens.get(32).startOffset);
		assertEquals(52, tokens.get(32).endOffset);
		assertEquals(2, tokens.get(32).word.length());
		assertEquals(2, tokens.get(32).endOffset - tokens.get(32).startOffset);
		assertEquals("侵权", tokens.get(33).word);
		assertEquals(52, tokens.get(33).startOffset);
		assertEquals(54, tokens.get(33).endOffset);
		assertEquals(2, tokens.get(33).word.length());
		assertEquals(2, tokens.get(33).endOffset - tokens.get(33).startOffset);
		assertEquals("责任", tokens.get(34).word);
		assertEquals(54, tokens.get(34).startOffset);
		assertEquals(56, tokens.get(34).endOffset);
		assertEquals(2, tokens.get(34).word.length());
		assertEquals(2, tokens.get(34).endOffset - tokens.get(34).startOffset);
		assertEquals("责任法", tokens.get(35).word);
		assertEquals(54, tokens.get(35).startOffset);
		assertEquals(57, tokens.get(35).endOffset);
		assertEquals(3, tokens.get(35).word.length());
		assertEquals(3, tokens.get(35).endOffset - tokens.get(35).startOffset);
		assertEquals("草案", tokens.get(36).word);
		assertEquals(57, tokens.get(36).startOffset);
		assertEquals(59, tokens.get(36).endOffset);
		assertEquals(2, tokens.get(36).word.length());
		assertEquals(2, tokens.get(36).endOffset - tokens.get(36).startOffset);
		assertEquals("，", tokens.get(37).word);
		assertEquals(59, tokens.get(37).startOffset);
		assertEquals(60, tokens.get(37).endOffset);
		assertEquals(1, tokens.get(37).word.length());
		assertEquals(1, tokens.get(37).endOffset - tokens.get(37).startOffset);
		assertEquals("删除", tokens.get(38).word);
		assertEquals(60, tokens.get(38).startOffset);
		assertEquals(62, tokens.get(38).endOffset);
		assertEquals(2, tokens.get(38).word.length());
		assertEquals(2, tokens.get(38).endOffset - tokens.get(38).startOffset);
		assertEquals("了", tokens.get(39).word);
		assertEquals(62, tokens.get(39).startOffset);
		assertEquals(63, tokens.get(39).endOffset);
		assertEquals(1, tokens.get(39).word.length());
		assertEquals(1, tokens.get(39).endOffset - tokens.get(39).startOffset);
		assertEquals("有关", tokens.get(40).word);
		assertEquals(63, tokens.get(40).startOffset);
		assertEquals(65, tokens.get(40).endOffset);
		assertEquals(2, tokens.get(40).word.length());
		assertEquals(2, tokens.get(40).endOffset - tokens.get(40).startOffset);
		assertEquals("医疗", tokens.get(41).word);
		assertEquals(65, tokens.get(41).startOffset);
		assertEquals(67, tokens.get(41).endOffset);
		assertEquals(2, tokens.get(41).word.length());
		assertEquals(2, tokens.get(41).endOffset - tokens.get(41).startOffset);
		assertEquals("损害", tokens.get(42).word);
		assertEquals(67, tokens.get(42).startOffset);
		assertEquals(69, tokens.get(42).endOffset);
		assertEquals(2, tokens.get(42).word.length());
		assertEquals(2, tokens.get(42).endOffset - tokens.get(42).startOffset);
		assertEquals("责任", tokens.get(43).word);
		assertEquals(69, tokens.get(43).startOffset);
		assertEquals(71, tokens.get(43).endOffset);
		assertEquals(2, tokens.get(43).word.length());
		assertEquals(2, tokens.get(43).endOffset - tokens.get(43).startOffset);
		assertEquals("“", tokens.get(44).word);
		assertEquals(71, tokens.get(44).startOffset);
		assertEquals(72, tokens.get(44).endOffset);
		assertEquals(1, tokens.get(44).word.length());
		assertEquals(1, tokens.get(44).endOffset - tokens.get(44).startOffset);
		assertEquals("举证", tokens.get(45).word);
		assertEquals(72, tokens.get(45).startOffset);
		assertEquals(74, tokens.get(45).endOffset);
		assertEquals(2, tokens.get(45).word.length());
		assertEquals(2, tokens.get(45).endOffset - tokens.get(45).startOffset);
		assertEquals("倒置", tokens.get(46).word);
		assertEquals(74, tokens.get(46).startOffset);
		assertEquals(76, tokens.get(46).endOffset);
		assertEquals(2, tokens.get(46).word.length());
		assertEquals(2, tokens.get(46).endOffset - tokens.get(46).startOffset);
		assertEquals("”", tokens.get(47).word);
		assertEquals(76, tokens.get(47).startOffset);
		assertEquals(77, tokens.get(47).endOffset);
		assertEquals(1, tokens.get(47).word.length());
		assertEquals(1, tokens.get(47).endOffset - tokens.get(47).startOffset);
		assertEquals("的", tokens.get(48).word);
		assertEquals(77, tokens.get(48).startOffset);
		assertEquals(78, tokens.get(48).endOffset);
		assertEquals(1, tokens.get(48).word.length());
		assertEquals(1, tokens.get(48).endOffset - tokens.get(48).startOffset);
		assertEquals("规定", tokens.get(49).word);
		assertEquals(78, tokens.get(49).startOffset);
		assertEquals(80, tokens.get(49).endOffset);
		assertEquals(2, tokens.get(49).word.length());
		assertEquals(2, tokens.get(49).endOffset - tokens.get(49).startOffset);
		assertEquals("。", tokens.get(50).word);
		assertEquals(80, tokens.get(50).startOffset);
		assertEquals(81, tokens.get(50).endOffset);
		assertEquals(1, tokens.get(50).word.length());
		assertEquals(1, tokens.get(50).endOffset - tokens.get(50).startOffset);
		assertEquals("在", tokens.get(51).word);
		assertEquals(81, tokens.get(51).startOffset);
		assertEquals(82, tokens.get(51).endOffset);
		assertEquals(1, tokens.get(51).word.length());
		assertEquals(1, tokens.get(51).endOffset - tokens.get(51).startOffset);
		assertEquals("医患", tokens.get(52).word);
		assertEquals(82, tokens.get(52).startOffset);
		assertEquals(84, tokens.get(52).endOffset);
		assertEquals(2, tokens.get(52).word.length());
		assertEquals(2, tokens.get(52).endOffset - tokens.get(52).startOffset);
		assertEquals("纠纷", tokens.get(53).word);
		assertEquals(84, tokens.get(53).startOffset);
		assertEquals(86, tokens.get(53).endOffset);
		assertEquals(2, tokens.get(53).word.length());
		assertEquals(2, tokens.get(53).endOffset - tokens.get(53).startOffset);
		assertEquals("中本", tokens.get(54).word);
		assertEquals(86, tokens.get(54).startOffset);
		assertEquals(88, tokens.get(54).endOffset);
		assertEquals(2, tokens.get(54).word.length());
		assertEquals(2, tokens.get(54).endOffset - tokens.get(54).startOffset);
		assertEquals("已", tokens.get(55).word);
		assertEquals(88, tokens.get(55).startOffset);
		assertEquals(89, tokens.get(55).endOffset);
		assertEquals(1, tokens.get(55).word.length());
		assertEquals(1, tokens.get(55).endOffset - tokens.get(55).startOffset);
		assertEquals("处于", tokens.get(56).word);
		assertEquals(89, tokens.get(56).startOffset);
		assertEquals(91, tokens.get(56).endOffset);
		assertEquals(2, tokens.get(56).word.length());
		assertEquals(2, tokens.get(56).endOffset - tokens.get(56).startOffset);
		assertEquals("弱势", tokens.get(57).word);
		assertEquals(91, tokens.get(57).startOffset);
		assertEquals(93, tokens.get(57).endOffset);
		assertEquals(2, tokens.get(57).word.length());
		assertEquals(2, tokens.get(57).endOffset - tokens.get(57).startOffset);
		assertEquals("地位", tokens.get(58).word);
		assertEquals(93, tokens.get(58).startOffset);
		assertEquals(95, tokens.get(58).endOffset);
		assertEquals(2, tokens.get(58).word.length());
		assertEquals(2, tokens.get(58).endOffset - tokens.get(58).startOffset);
		assertEquals("的", tokens.get(59).word);
		assertEquals(95, tokens.get(59).startOffset);
		assertEquals(96, tokens.get(59).endOffset);
		assertEquals(1, tokens.get(59).word.length());
		assertEquals(1, tokens.get(59).endOffset - tokens.get(59).startOffset);
		assertEquals("消费", tokens.get(60).word);
		assertEquals(96, tokens.get(60).startOffset);
		assertEquals(98, tokens.get(60).endOffset);
		assertEquals(2, tokens.get(60).word.length());
		assertEquals(2, tokens.get(60).endOffset - tokens.get(60).startOffset);
		assertEquals("消费者", tokens.get(61).word);
		assertEquals(96, tokens.get(61).startOffset);
		assertEquals(99, tokens.get(61).endOffset);
		assertEquals(3, tokens.get(61).word.length());
		assertEquals(3, tokens.get(61).endOffset - tokens.get(61).startOffset);
		assertEquals("由此", tokens.get(62).word);
		assertEquals(99, tokens.get(62).startOffset);
		assertEquals(101, tokens.get(62).endOffset);
		assertEquals(2, tokens.get(62).word.length());
		assertEquals(2, tokens.get(62).endOffset - tokens.get(62).startOffset);
		assertEquals("将", tokens.get(63).word);
		assertEquals(101, tokens.get(63).startOffset);
		assertEquals(102, tokens.get(63).endOffset);
		assertEquals(1, tokens.get(63).word.length());
		assertEquals(1, tokens.get(63).endOffset - tokens.get(63).startOffset);
		assertEquals("陷入", tokens.get(64).word);
		assertEquals(102, tokens.get(64).startOffset);
		assertEquals(104, tokens.get(64).endOffset);
		assertEquals(2, tokens.get(64).word.length());
		assertEquals(2, tokens.get(64).endOffset - tokens.get(64).startOffset);
		assertEquals("不复", tokens.get(65).word);
		assertEquals(106, tokens.get(65).startOffset);
		assertEquals(108, tokens.get(65).endOffset);
		assertEquals(2, tokens.get(65).word.length());
		assertEquals(2, tokens.get(65).endOffset - tokens.get(65).startOffset);
		assertEquals("万劫不复", tokens.get(66).word);
		assertEquals(104, tokens.get(66).startOffset);
		assertEquals(108, tokens.get(66).endOffset);
		assertEquals(4, tokens.get(66).word.length());
		assertEquals(4, tokens.get(66).endOffset - tokens.get(66).startOffset);
		assertEquals("的", tokens.get(67).word);
		assertEquals(108, tokens.get(67).startOffset);
		assertEquals(109, tokens.get(67).endOffset);
		assertEquals(1, tokens.get(67).word.length());
		assertEquals(1, tokens.get(67).endOffset - tokens.get(67).startOffset);
		assertEquals("境地", tokens.get(68).word);
		assertEquals(109, tokens.get(68).startOffset);
		assertEquals(111, tokens.get(68).endOffset);
		assertEquals(2, tokens.get(68).word.length());
		assertEquals(2, tokens.get(68).endOffset - tokens.get(68).startOffset);
		assertEquals("。", tokens.get(69).word);
		assertEquals(111, tokens.get(69).startOffset);
		assertEquals(112, tokens.get(69).endOffset);
		assertEquals(1, tokens.get(69).word.length());
		assertEquals(1, tokens.get(69).endOffset - tokens.get(69).startOffset);
		assertEquals(" ", tokens.get(70).word);
		assertEquals(112, tokens.get(70).startOffset);
		assertEquals(113, tokens.get(70).endOffset);
		assertEquals(1, tokens.get(70).word.length());
		assertEquals(1, tokens.get(70).endOffset - tokens.get(70).startOffset);
	}
}
